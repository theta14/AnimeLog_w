{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/dialogs/ended-dialog/ended-dialog.component.html","src/app/components/dialogs/ohli-dialog/ohli-dialog.component.html","src/app/components/dialogs/search-dialog/search-dialog.component.html","src/app/components/dialogs/studio-dialog/studio-dialog.component.html","src/app/components/dialogs/text-field-dialog/text-field-dialog.component.html","src/app/components/home/home.component.html","src/app/components/movie/movie.component.html","src/app/components/no-page/no-page.component.html","src/app/components/plan/plan.component.html","src/app/components/tva/tva.component.html","src/app/components/watching/watching.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/components/dialogs/ended-dialog/ended-dialog.component.css","src/app/components/dialogs/ended-dialog/ended-dialog.component.ts","src/app/components/dialogs/ohli-dialog/ohli-dialog.component.css","src/app/components/dialogs/ohli-dialog/ohli-dialog.component.ts","src/app/components/dialogs/search-dialog/search-dialog.component.css","src/app/components/dialogs/search-dialog/search-dialog.component.ts","src/app/components/dialogs/studio-dialog/studio-dialog.component.css","src/app/components/dialogs/studio-dialog/studio-dialog.component.ts","src/app/components/dialogs/text-field-dialog/text-field-dialog.component.css","src/app/components/dialogs/text-field-dialog/text-field-dialog.component.ts","src/app/components/home/home.component.css","src/app/components/home/home.component.model.ts","src/app/components/home/home.component.ts","src/app/components/movie/movie.component.css","src/app/components/movie/movie.component.ts","src/app/components/no-page/no-page.component.css","src/app/components/no-page/no-page.component.ts","src/app/components/plan/plan.component.css","src/app/components/plan/plan.component.ts","src/app/components/tva/tva.component.css","src/app/components/tva/tva.component.ts","src/app/components/watching/watching.component.css","src/app/components/watching/watching.component.ts","src/app/interceptors/content.type.interceptor.ts","src/app/models/headerAlign.ts","src/app/models/item.ts","src/app/models/searched.ts","src/app/pipes/safe.html.ts","src/app/pipes/safe.url.ts","src/app/services/movie.service.ts","src/app/services/plan.service.ts","src/app/services/search.service.ts","src/app/services/title.service.ts","src/app/services/tva.service.ts","src/app/services/watching.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<table id=\\\"scroll-button\\\">\\r\\n    <tr>\\r\\n        <td class=\\\"clickable\\\" (click)=\\\"scrollUp()\\\"><mat-icon>keyboard_arrow_up</mat-icon></td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <td class=\\\"clickable\\\" (click)=\\\"scrollDown()\\\"><mat-icon>keyboard_arrow_down</mat-icon></td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light rounded navbar-fixed-top mdl-shadow--2dp\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">AnimeLog W</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-controls=\\\"navbar\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbar\\\">\\r\\n        <ul></ul>\\r\\n        <nav mat-tab-nav-bar>\\r\\n            <a mat-tab-link\\r\\n                class=\\\"mat-tabs\\\"\\r\\n                *ngFor=\\\"let link of navLinks\\\"\\r\\n                [routerLink]=\\\"link.path\\\"\\r\\n                routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n                [active]=\\\"rla.isActive\\\">\\r\\n                {{link.label}}\\r\\n            </a>\\r\\n        </nav>\\r\\n    </div>\\r\\n</nav>\\r\\n<ng-flash-message></ng-flash-message>\\r\\n\\r\\n<div id=\\\"main-part\\\" class=\\\"bg-dark\\\">\\r\\n    <div *ngIf=\\\"router.url != '/'\\\">\\r\\n        <br><br><br><br>\\r\\n    </div>\\r\\n    <main role=\\\"main\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </main>\\r\\n    <br><br><br>\\r\\n</div>\\r\\n\\r\\n<footer class=\\\"text-muted py-5 bg-secondary\\\" id=\\\"footer\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <p><b>Powered by ParkJH</b></p><br>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm\\\">\\r\\n                <p><b>MEAN Stack</b></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://www.mongodb.com\\\">MongoDB</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://expressjs.com/ko/\\\">Express</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://angular.kr/\\\">Angular</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://nodejs.org/ko/\\\">Node.js</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://github.com/theta14/AnimeLog_w.git\\\">Github</a></p>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm\\\">\\r\\n                <p><b>CSS</b></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://getbootstrap.com/\\\">Bootstrap</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://material.angular.io/\\\">Angular Material</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://getmdl.io/\\\">Material Design Lite</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://material.io/resources/icons/?style=baseline\\\">Material Icons</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://www.svgbackgrounds.com/\\\">SVG Backgrounds</a></p>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm\\\">\\r\\n                <p><b>Resources</b></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://myanimelist.net/\\\">MyAnimeList</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"http://onnada.com/\\\">Onnada</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://nyaa.si/\\\">Nyaa</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"http://raws.ohys.net/t/\\\">Ohys</a></p>\\r\\n                <p><a target=\\\"_blank\\\" href=\\\"https://ohli.moe/\\\">OHLI</a></p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\\r\\n\"","export default \"<h2 mat-dialog-title>{{data.title[data.title.rv]}}</h2>\\r\\n<div mat-dialog-content *ngIf=\\\"!year\\\">\\r\\n  <mat-spinner></mat-spinner><br>\\r\\n  필요한 정보를 불러오는 중...\\r\\n</div>\\r\\n<div mat-dialog-content *ngIf=\\\"year\\\">\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n    <table class=\\\"table table-borderless\\\" style=\\\"width: 65%; margin: auto;\\\">\\r\\n      <tr>\\r\\n        <td style=\\\"text-align: center;\\\">\\r\\n          <img [src]=\\\"data.img\\\">\\r\\n        </td>\\r\\n        <td style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n          <button mat-stroked-button (click)=\\\"findOhliId()\\\">자막 찾기</button><br><br>\\r\\n          <a mat-stroked-button [href]=\\\"'https://www.google.com/search?q=' + data.title.kor + ' 토렌트'\\\" target=\\\"_blank\\\" class=\\\"btn-link\\\">구글 검색</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n    <br>\\r\\n  \\r\\n    <table class=\\\"table\\\">\\r\\n      <caption>Nyaa</caption>\\r\\n      <tr *ngIf=\\\"!videos\\\">\\r\\n        <td colspan=\\\"4\\\">\\r\\n          <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <ng-container *ngIf=\\\"videos\\\">\\r\\n        <tr *ngFor=\\\"let video of videos\\\">\\r\\n          <td>{{getDate(video.date)}}</td>\\r\\n          <td>{{video.name}}</td>\\r\\n          <td>{{getSize(video.size)}}</td>\\r\\n          <td>\\r\\n            <a [href]=\\\"video.magnet | safeUrl\\\" class=\\\"download-link\\\">▶</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  \\r\\n    <hr><br>\\r\\n  \\r\\n    <table class=\\\"table\\\">\\r\\n      <caption>Ohys</caption>\\r\\n      <tr *ngIf=\\\"!ohyses\\\">\\r\\n        <td colspan=\\\"2\\\">\\r\\n          <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <ng-container *ngIf=\\\"ohyses\\\">\\r\\n        <tr *ngFor=\\\"let ohys of ohyses\\\">\\r\\n          <td>{{ohys.name}}</td>\\r\\n          <td>\\r\\n            <a [href]=\\\"ohys.link\\\" class=\\\"download-link\\\" download>▶</a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  \\r\\n    <hr><br>\\r\\n  \\r\\n    <table class=\\\"table\\\">\\r\\n      <caption>OHLI</caption>\\r\\n      <tr *ngIf=\\\"!subtitles\\\">\\r\\n        <td colspan=\\\"4\\\">\\r\\n          <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <ng-container *ngIf=\\\"subtitles\\\">\\r\\n        <tr *ngFor=\\\"let subtitle of subtitles\\\">\\r\\n          <td>{{getDate(subtitle.date)}}</td>\\r\\n          <td>제{{subtitle.episode}}화</td>\\r\\n          <td>{{subtitle.by}}</td>\\r\\n          <td><a class=\\\"download-link\\\" [href]=\\\"subtitle.link\\\" target=\\\"_blank\\\">페이지로 이동</a></td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button tabindex=\\\"-1\\\" (click)=\\\"onClose()\\\">닫기</button>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title *ngIf=\\\"!loading\\\">[ {{data.title}} ] 검색 결과</h2>\\r\\n<div mat-dialog-content>\\r\\n  \\r\\n  <div *ngIf=\\\"loading\\\" style=\\\"text-align: center;\\\">\\r\\n    <mat-spinner></mat-spinner><br>\\r\\n    결과를 가져오는 중...\\r\\n  </div>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"!loading\\\">\\r\\n    <ng-container *ngFor=\\\"let ohli of ohlis; index as i\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td style=\\\"text-align: center; vertical-align: middle;\\\" rowspan=\\\"4\\\">\\r\\n            <img [src]=\\\"ohli.img\\\">\\r\\n          </td>\\r\\n          <th>OHLI</th>\\r\\n          <td>{{ohli.id}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>{{ohli.title}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 시작일</th>\\r\\n          <td>{{ohli.aired}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button (click)=\\\"selectItem(i)\\\" mat-button>선택</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </ng-container>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button tabindex=\\\"-1\\\" (click)=\\\"onClose()\\\">닫기</button>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title *ngIf=\\\"!loading\\\">[ {{data.search.text}} ] 검색 결과</h2>\\r\\n<div mat-dialog-content>\\r\\n  \\r\\n  <div *ngIf=\\\"loading\\\" style=\\\"text-align: center;\\\">\\r\\n    <mat-spinner></mat-spinner><br>\\r\\n    결과를 가져오는 중...\\r\\n  </div>\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"!loading\\\">\\r\\n    <ng-container *ngFor=\\\"let searched of searches; index as i\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <td style=\\\"text-align: center; vertical-align: middle;\\\" rowspan=\\\"5\\\">\\r\\n            <img [src]=\\\"searched.img\\\">\\r\\n          </td>\\r\\n          <th>타입</th>\\r\\n          <td>{{searched.type}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>{{searched.title}}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 분기</th>\\r\\n          <td>\\r\\n            {{searched.premiered.year}}년 {{searched.premiered.quarter}}분기\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>MyAnimeList</th>\\r\\n          <td>\\r\\n            <a [href]=\\\"'https://myanimelist.net/anime/' + searched.mal_id\\\" target=\\\"_blank\\\">\\r\\n              {{searched.mal_id}}\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button (click)=\\\"selectItem(i)\\\" mat-button>선택</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </ng-container>\\r\\n    <div *ngIf=\\\"searches.length == 0\\\">\\r\\n      <p>검색결과가 없거나 에러가 발생하였습니다.</p>\\r\\n      <p><a [href]=\\\"getLink()\\\" target=\\\"_blank\\\">직접 검색해보기</a></p>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button tabindex=\\\"-1\\\" (click)=\\\"onClose()\\\">닫기</button>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title>{{data}}</h2>\\r\\n<div mat-dialog-content>\\r\\n  <ul *ngIf=\\\"tvas.length > 0 || movies.length > 0\\\">\\r\\n    <li *ngIf=\\\"tvas.length > 0\\\">TVA ({{tvas.length}})\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let item of tvas; index as i\\\">\\r\\n          <hr *ngIf=\\\"yearChanged(i)\\\">\\r\\n          <a [routerLink]=\\\"getLink('tva', item)\\\" target=\\\"_blank\\\">\\r\\n            {{item.title[item.title.rv]}} <span style=\\\"font-size: 80%;\\\">({{getFormattedDate(item.date)}})</span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </li>\\r\\n    <br *ngIf=\\\"movies.length > 0\\\">\\r\\n    <li *ngIf=\\\"movies.length > 0\\\">극장판 ({{movies.length}})\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let item of movies\\\">\\r\\n          <a [routerLink]=\\\"getLink('movie', item)\\\" target=\\\"_blank\\\">\\r\\n            {{item.title[item.title.rv]}} <span style=\\\"font-size: 80%;\\\">({{getFormattedDate(item.date)}})</span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <p *ngIf=\\\"tvas.length == 0 && movies.length == 0\\\">시청 항목이 존재하지 않습니다.</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button tabindex=\\\"-1\\\" (click)=\\\"onClose()\\\">닫기</button>\\r\\n</div>\\r\\n\"","export default \"<h2 mat-dialog-title>{{data.title}}</h2>\\r\\n<div mat-dialog-content>\\r\\n  <p>{{data.explain}}</p>\\r\\n  <mat-form-field style=\\\"width: 100%;\\\">\\r\\n    <input matInput [(ngModel)]=\\\"data.text\\\" [placeholder]=\\\"data.placeholder\\\" #_self (click)=\\\"_self.select()\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button tabindex=\\\"-1\\\" (click)=\\\"onClose()\\\">닫기</button>\\r\\n  <button mat-button tabindex=\\\"-1\\\" [mat-dialog-close]=\\\"data.text\\\" cdkFocusInitial>확인</button>\\r\\n</div>\\r\\n\"","export default \"<div id=\\\"rwCarousel\\\" class=\\\"carousel slide mdl-shadow--2dp\\\" data-ride=\\\"carousel\\\">\\r\\n\\r\\n  <ol class=\\\"carousel-indicators\\\">\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"1\\\"></li>\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"2\\\"></li>\\r\\n    <li data-target=\\\"#rwCarousel\\\" data-slide-to=\\\"3\\\"></li>\\r\\n  </ol>\\r\\n\\r\\n  <div class=\\\"carousel-inner\\\">\\r\\n    <div [class]=\\\"'carousel-item active bg-svg-' + backgrounds[0]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption text-left\\\">\\r\\n          <h3>{{carousel[0]?.type}}</h3>\\r\\n          <h4>{{carousel[0]?.title}}</h4>\\r\\n          <p>{{carousel[0]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"carousel[0]?.link\\\" role=\\\"button\\\" class=\\\"carousel-button\\\">보기</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div [class]=\\\"'carousel-item bg-svg-' + backgrounds[1]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n          <h3>{{carousel[1]?.type}}</h3>\\r\\n          <h4>{{carousel[1]?.title}}</h4>\\r\\n          <p>{{carousel[1]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"carousel[1]?.link\\\" role=\\\"button\\\" class=\\\"carousel-button\\\">보기</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div [class]=\\\"'carousel-item bg-svg-' + backgrounds[2]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption text-right\\\">\\r\\n          <h3>{{carousel[2]?.type}}</h3>\\r\\n          <h4>{{carousel[2]?.title}}</h4>\\r\\n          <p>{{carousel[2]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"carousel[2]?.link\\\" role=\\\"button\\\" class=\\\"carousel-button\\\">보기</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div [class]=\\\"'carousel-item bg-svg-' + backgrounds[3]\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"carousel-caption\\\">\\r\\n          <h3>{{carousel[3]?.type}}</h3>\\r\\n          <h4>{{carousel[3]?.title}}</h4>\\r\\n          <p>{{carousel[3]?.content}}</p>\\r\\n          <p><a mat-flat-button [routerLink]=\\\"carousel[3]?.link\\\" role=\\\"button\\\" class=\\\"carousel-button\\\">보기</a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <a class=\\\"carousel-control-prev\\\" href=\\\"#rwCarousel\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Previous</span>\\r\\n  </a>\\r\\n  <a class=\\\"carousel-control-next\\\" href=\\\"#rwCarousel\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Next</span>\\r\\n  </a>\\r\\n</div>\\r\\n\\r\\n<section></section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <table class=\\\"table table-dark\\\">\\r\\n    <tr>\\r\\n      <th>TVA</th>\\r\\n      <td>{{allItems?.tvas.length}}개</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>극장판</th>\\r\\n      <td>{{allItems?.movies.length}}개</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>시청 중</th>\\r\\n      <td>{{allItems?.watchings.length}}개</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <th>시청 예정</th>\\r\\n      <td>{{allItems?.plans.length}}개</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <table class=\\\"table table-secondary\\\">\\r\\n    <tr>\\r\\n      <td>\\r\\n        <div style=\\\"margin: auto; width: 60%; color: black;\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 80%;\\\">\\r\\n            <mat-label>검색</mat-label>\\r\\n            <input matInput placeholder=\\\"검색어를 입력해주세요.\\\" (keyup.enter)=\\\"search(text.value)\\\" #text>\\r\\n          </mat-form-field>\\r\\n          <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(text.value)\\\">\\r\\n            <mat-icon>search</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <div *ngIf=\\\"searchedText\\\">\\r\\n    <p><b>{{searchedText}}</b> 검색결과 : {{searchedItems.tvas.length + searchedItems.movies.length + searchedItems.watchings.length + searchedItems.plans.length}}건</p>\\r\\n\\r\\n    <table class=\\\"table table-dark\\\">\\r\\n      <caption>TVA ({{searchedItems.tvas.length}}건)</caption>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>시리즈</th>\\r\\n          <th>제목</th>\\r\\n          <th>시즌</th>\\r\\n          <th colspan=\\\"120\\\">제작사</th>\\r\\n          <th>화수</th>\\r\\n          <th>방영분기</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let tva of searchedItems.tvas | slice: pageEvents.tva.pageIndex * pageEvents.tva.pageSize : (pageEvents.tva.pageIndex + 1) * pageEvents.tva.pageSize; index as t\\\">\\r\\n          <tr>\\r\\n            <td><span *ngIf=\\\"tva.seriesTitle != tva.title[tva.title.rv]\\\">{{tva.seriesTitle}}</span></td>\\r\\n            <td>\\r\\n              <a [routerLink]=\\\"['/tva', tva._id, tva.series, tva.sequence]\\\" class=\\\"searched-link\\\">{{tva.title[tva.title.rv]}}</a>\\r\\n            </td>\\r\\n            <td>{{tva.season}}</td>\\r\\n            <td *ngFor=\\\"let studio of tva.studios\\\" [attr.colspan]=\\\"120 / tva.studios.length\\\">\\r\\n              <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n            </td>\\r\\n            <td>{{tva.episodes}}</td>\\r\\n            <td>'{{tva.premiered.year.toString().substring(2)}} - {{tva.premiered.quarter}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator *ngIf=\\\"searchedItems.tvas.length > pageSizeOptions[0]\\\"\\r\\n      [length]=\\\"searchedItems.tvas.length\\\"\\r\\n      [pageSize]=\\\"pageSize\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n      (page)=\\\"pageEvents.tva = $event\\\"></mat-paginator><br><br>\\r\\n\\r\\n    <table class=\\\"table table-dark\\\">\\r\\n      <caption>극장판 ({{searchedItems.movies.length}}건)</caption>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>시리즈</th>\\r\\n          <th>제목</th>\\r\\n          <th>순서</th>\\r\\n          <th colspan=\\\"120\\\">제작사</th>\\r\\n          <th>개봉일</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let movie of searchedItems.movies | slice: pageEvents.movie.pageIndex * pageEvents.movie.pageSize : (pageEvents.movie.pageIndex + 1) * pageEvents.movie.pageSize; index as m\\\">\\r\\n          <tr>\\r\\n            <td><span *ngIf=\\\"movie.seriesTitle != movie.title[movie.title.rv]\\\">{{movie.seriesTitle}}</span></td>\\r\\n            <td>\\r\\n              <a [routerLink]=\\\"['/movie', movie._id, movie.series, movie.sequence]\\\" class=\\\"searched-link\\\">{{movie.title[movie.title.rv]}}</a>\\r\\n            </td>\\r\\n            <td>{{movie.order}}</td>\\r\\n            <td *ngFor=\\\"let studio of movie.studios\\\" [attr.colspan]=\\\"120 / movie.studios.length\\\">\\r\\n              <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n            </td>\\r\\n            <td>{{movie.aired}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator *ngIf=\\\"searchedItems.movies.length > pageSizeOptions[0]\\\"\\r\\n      [length]=\\\"searchedItems.movies.length\\\"\\r\\n      [pageSize]=\\\"pageSize\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n      (page)=\\\"pageEvents.movie = $event\\\"></mat-paginator><br><br>\\r\\n\\r\\n    <table class=\\\"table table-dark\\\">\\r\\n      <caption>시청 중인 목록 ({{searchedItems.watchings.length}}건)</caption>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>타입</th>\\r\\n          <th>방영중</th>\\r\\n          <th>제목</th>\\r\\n          <th colspan=\\\"120\\\">제작사</th>\\r\\n          <th>방영분기</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let item of searchedItems.watchings | slice: pageEvents.watching.pageIndex * pageEvents.watching.pageSize : (pageEvents.watching.pageIndex + 1) * pageEvents.watching.pageSize; index as i\\\">\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n            <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n            <td *ngIf=\\\"item.ohli_id\\\">O</td>\\r\\n            <td *ngIf=\\\"!item.ohli_id\\\">X</td>\\r\\n            <td>\\r\\n              <a [routerLink]=\\\"['/watching', item._id]\\\" class=\\\"searched-link\\\">{{item.title[item.title.rv]}}</a>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let studio of item.studios\\\" [attr.colspan]=\\\"120 / item.studios.length\\\">\\r\\n              <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n            </td>\\r\\n            <td>'{{item.premiered.year.toString().substring(2)}} - {{item.premiered.quarter}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator *ngIf=\\\"searchedItems.watchings.length > pageSizeOptions[0]\\\"\\r\\n      [length]=\\\"searchedItems.watchings.length\\\"\\r\\n      [pageSize]=\\\"pageSize\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n      (page)=\\\"pageEvents.watching = $event\\\"></mat-paginator><br><br>\\r\\n\\r\\n    <table class=\\\"table table-dark\\\">\\r\\n      <caption>시청 예정 목록 ({{searchedItems.plans.length}}건)</caption>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>타입</th>\\r\\n          <th>제목</th>\\r\\n          <th colspan=\\\"120\\\">제작사</th>\\r\\n          <th>방영분기</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let item of searchedItems.plans | slice: pageEvents.plan.pageIndex * pageEvents.plan.pageSize : (pageEvents.plan.pageIndex + 1) * pageEvents.plan.pageSize; index as i\\\">\\r\\n          <tr>\\r\\n            <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n            <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n            <td>\\r\\n              <a [routerLink]=\\\"['/plan', item._id]\\\" class=\\\"searched-link\\\">{{item.title[item.title.rv]}}</a>\\r\\n            </td>\\r\\n            <td colspan=\\\"120\\\" *ngIf=\\\"item.studios.length == 0\\\">-</td>\\r\\n            <ng-container *ngIf=\\\"item.studios.length > 0\\\">\\r\\n              <td *ngFor=\\\"let studio of item.studios\\\" [attr.colspan]=\\\"120 / item.studios.length\\\">\\r\\n                <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <td>{{getQuarterFromAiredDate(item.aired)}}</td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator *ngIf=\\\"searchedItems.plans.length > pageSizeOptions[0]\\\"\\r\\n      [length]=\\\"searchedItems.plans.length\\\"\\r\\n      [pageSize]=\\\"pageSize\\\"\\r\\n      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n      (page)=\\\"pageEvents.plan = $event\\\"></mat-paginator><br><br>\\r\\n  </div>\\r\\n\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"container\\\">\\r\\n  <div class=\\\"border border-secondary info-area\\\">\\r\\n    <h4>극장판</h4>\\r\\n    <p>카테고리 수: {{movies?.length}}</p>\\r\\n    <p>극장판 수: {{count()}}</p>\\r\\n    <p>\\r\\n      <button mat-flat-button (click)=\\\"openAll()\\\">전체 열기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"closeAll()\\\">전체 닫기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"writeMovie(); writingArea.scrollIntoView()\\\">새 항목 작성</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"!movies\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <table class=\\\"table table-dark\\\" *ngIf=\\\"movies\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"align(0, 0)\\\">카테고리</th>\\r\\n        <th (click)=\\\"align(0, 1)\\\">시리즈</th>\\r\\n        <th (click)=\\\"align(0, 2)\\\">제목</th>\\r\\n        <th>순서</th>\\r\\n        <th (click)=\\\"align(0, 3)\\\" colspan=\\\"120\\\">제작사</th>\\r\\n        <th (click)=\\\"align(0, 4)\\\">개봉일</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let movie of movies; index as m\\\">\\r\\n\\r\\n        <ng-container *ngFor=\\\"let series of movie.series; index as i\\\">\\r\\n          <ng-container *ngFor=\\\"let sequence of series.sequences; index as j\\\">\\r\\n            <tr [attr.id]=\\\"movie._id\\\">\\r\\n              <td *ngIf=\\\"movie.series.length > 1 && i == 0 && j == 0\\\" [attr.rowspan]=\\\"allElementsLength(m)\\\"\\r\\n                class=\\\"table-category\\\" style=\\\"vertical-align: middle;\\\">{{movie.category}}</td>\\r\\n              <td *ngIf=\\\"movie.series.length > 1 && j == 0\\\" class=\\\"table-series\\\"\\r\\n                [attr.rowspan]=\\\"movie.series[i].sequences.length\\\" style=\\\"vertical-align: middle;\\\">{{series.title}}</td>\\r\\n              <td *ngIf=\\\"movie.series.length == 1 && movie.series[0].sequences.length > 1 && j == 0\\\"\\r\\n                [attr.rowspan]=\\\"movie.series[0].sequences.length\\\" colspan=\\\"2\\\" class=\\\"table-category\\\"\\r\\n                style=\\\"vertical-align: middle; text-align: center;\\\">{{movie.category}}</td>\\r\\n              <td *ngIf=\\\"movie.series.length == 1 && movie.series[0].sequences.length == 1\\\" colspan=\\\"2\\\"></td>\\r\\n              <td>\\r\\n                <span class=\\\"clickable\\\" (click)=\\\"clickMovie(m, i, j)\\\">{{sequence.title[sequence.title.rv]}}</span>\\r\\n              </td>\\r\\n              <td *ngIf=\\\"movie.series.length == 1 && movie.series[0].sequences.length == 1; else orderTemplate\\\"></td>\\r\\n              <ng-template #orderTemplate>\\r\\n                <td>{{sequence.order}}</td>\\r\\n              </ng-template>\\r\\n              <td *ngFor=\\\"let studio of sequence.studios\\\" [attr.colspan]=\\\"120 / sequence.studios.length\\\">\\r\\n                <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n              </td>\\r\\n              <td>{{sequence.aired}}</td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"movie.opened && i == movie.series.length-1 && j == series.sequences.length-1\\\">\\r\\n              <td colspan=\\\"125\\\" style=\\\"padding: 0px;\\\">\\r\\n\\r\\n                <!-- detail -->\\r\\n                <table class=\\\"table table-dark table-hover\\\">\\r\\n                  <tr>\\r\\n                    <td style=\\\"text-align: center; vertical-align: middle;\\\"\\r\\n                      [attr.rowspan]=\\\"11 + movie.series[movie.opened.series].sequences[movie.opened.sequence].studios.length\\\">\\r\\n                      <img [src]=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].img\\\">\\r\\n                    </td>\\r\\n                    <th>카테고리</th>\\r\\n                    <td>\\r\\n                      <span class=\\\"clickable\\\" (click)=\\\"editCategory(m)\\\">{{movie.category}}</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>TVA</th>\\r\\n                    <td>\\r\\n                      <mat-progress-bar *ngIf=\\\"!movie.opened.linked\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                      <a *ngIf=\\\"movie.opened.linked\\\" class=\\\"detail-link\\\"\\r\\n                        [routerLink]=\\\"['/tva', movie.opened.linked._id, movie.opened.linked.series, 0]\\\">\\r\\n                        {{movie.opened.linked.title}}\\r\\n                      </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>시리즈 메모</th>\\r\\n                    <td>{{movie.series[movie.opened.series].memo}}</td>\\r\\n                  </tr>\\r\\n                  <tr><td></td><td></td></tr>\\r\\n                  <tr>\\r\\n                    <th rowspan=\\\"3\\\" style=\\\"vertical-align: middle;\\\">제목</th>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv == 'kor'\\\">\\r\\n                      <b>\\r\\n                        {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.kor}}\\r\\n                      </b>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv != 'kor'\\\">\\r\\n                      {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.kor}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv == 'eng'\\\">\\r\\n                      <b>\\r\\n                        {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.eng}}\\r\\n                      </b>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv != 'eng'\\\">\\r\\n                      {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.eng}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv == 'jpn'\\\">\\r\\n                      <b>\\r\\n                        {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.jpn}}\\r\\n                      </b>\\r\\n                    </td>\\r\\n                    <td *ngIf=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].title.rv != 'jpn'\\\">\\r\\n                      {{movie.series[movie.opened.series].sequences[movie.opened.sequence].title.jpn}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>개봉일</th>\\r\\n                    <td>\\r\\n                      {{movie.series[movie.opened.series].sequences[movie.opened.sequence].aired}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr *ngFor=\\\"let studio of movie.series[movie.opened.series].sequences[movie.opened.sequence].studios; index as s\\\">\\r\\n                    <th *ngIf=\\\"s == 0\\\" style=\\\"vertical-align: middle;\\\"\\r\\n                      [attr.rowspan]=\\\"movie.series[movie.opened.series].sequences[movie.opened.sequence].studios.length\\\">제작사</th>\\r\\n                    <td>\\r\\n                      <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>메모</th>\\r\\n                    <td>{{movie.series[movie.opened.series].sequences[movie.opened.sequence].memo}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <th>MyAnimeList</th>\\r\\n                    <td>\\r\\n                      <a [href]=\\\"'https://myanimelist.net/anime/' + movie.series[movie.opened.series].sequences[movie.opened.sequence].mal_id\\\" target=\\\"_blank\\\" class=\\\"detail-link\\\">\\r\\n                        {{movie.series[movie.opened.series].sequences[movie.opened.sequence].mal_id}}\\r\\n                      </a>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                      <a mat-button [href]=\\\"searchService.namuwiki(movie?.opened?.linked?.title)\\\" target=\\\"_blank\\\" [matTooltip]=\\\"searchService.namuwiki_label()\\\" class=\\\"no-hover-link\\\">\\r\\n                        <mat-icon>{{searchService.namuwiki_icon()}}</mat-icon>\\r\\n                      </a>\\r\\n                      <button mat-button (click)=\\\"modifyMovie(m, movie.opened.series, movie.opened.sequence)\\\" matTooltip=\\\"수정\\\">\\r\\n                        <mat-icon>create</mat-icon>\\r\\n                      </button>\\r\\n                      <button mat-button (click)=\\\"removeMovie(m, movie.opened.series, movie.opened.sequence)\\\" matTooltip=\\\"삭제\\\">\\r\\n                        <mat-icon>delete</mat-icon>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"movie.modifying && i == movie.series.length-1 && j == series.sequences.length-1\\\">\\r\\n              <td colspan=\\\"125\\\">\\r\\n\\r\\n                <!-- modifying -->\\r\\n                <form (submit)=\\\"onModifySubmit(m, modifying.series, modifying.sequence)\\\">\\r\\n                  <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n                    <tr>\\r\\n                      <th style=\\\"width: 30%;\\\">검색</th>\\r\\n                      <td>\\r\\n                        <mat-form-field class=\\\"form-item-select\\\">\\r\\n                          <mat-label>검색옵션</mat-label>\\r\\n                          <mat-select #searchOption>\\r\\n                            <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                            <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                            <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n                          <input matInput #searchBox (keyup.enter)=\\\"searchMovie(searchOption.value, searchBox.value, m)\\\">\\r\\n                        </mat-form-field>\\r\\n                        <button mat-flat-button type=\\\"button\\\" (click)=\\\"searchMovie(searchOption.value, searchBox.value, m)\\\">\\r\\n                          <mat-icon>search</mat-icon>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n                    <tr>\\r\\n                      <th rowspan=\\\"2\\\">TVA</th>\\r\\n                      <td>\\r\\n                        <mat-progress-bar *ngIf=\\\"!tvas\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                        <mat-form-field *ngIf=\\\"tvas\\\" class=\\\"form-item\\\">\\r\\n                          <mat-label>카테고리</mat-label>\\r\\n                          <mat-select [(ngModel)]=\\\"linked.idx\\\" name=\\\"tva_category\\\">\\r\\n                            <mat-option *ngFor=\\\"let tva of tvas; index as t\\\" [value]=\\\"t\\\">{{tva.category}}</mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td>\\r\\n                        <mat-form-field *ngIf=\\\"tvas && linked\\\" class=\\\"form-item\\\">\\r\\n                          <mat-label>시리즈</mat-label>\\r\\n                          <mat-select [(ngModel)]=\\\"linked.series\\\" name=\\\"tva_series\\\" class=\\\"form-item\\\">\\r\\n                            <mat-option *ngFor=\\\"let series of tvas[linked.idx].series; index as r\\\" [value]=\\\"r\\\">{{series.title}}</mat-option>\\r\\n                          </mat-select>\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>제목</th>\\r\\n                      <td>\\r\\n                        <mat-radio-group [(ngModel)]=\\\"movie.modifying.title.rv\\\" name=\\\"rv\\\">\\r\\n                          <table class=\\\"table table-borderless inner-table\\\">\\r\\n                            <tr>\\r\\n                              <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                              <td>\\r\\n                                <mat-form-field class=\\\"form-item\\\">\\r\\n                                  <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"movie.modifying.title.kor\\\" name=\\\"kor\\\">\\r\\n                                </mat-form-field>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                              <td>\\r\\n                                <mat-form-field class=\\\"form-item\\\">\\r\\n                                  <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"movie.modifying.title.eng\\\" name=\\\"eng\\\">\\r\\n                                </mat-form-field>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                              <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                              <td>\\r\\n                                <mat-form-field class=\\\"form-item\\\">\\r\\n                                  <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"movie.modifying.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                                </mat-form-field>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </mat-radio-group>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>순서</th>\\r\\n                      <td>\\r\\n                        <mat-form-field>\\r\\n                          <input matInput type=\\\"number\\\" [(ngModel)]=\\\"movie.modifying.order\\\" name=\\\"order\\\" min=\\\"1\\\">\\r\\n                          <span matSuffix>번째</span>\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>방영 시기</th>\\r\\n                      <td>\\r\\n                        <mat-form-field>\\r\\n                          <input matInput placeholder=\\\"개봉일\\\" [(ngModel)]=\\\"movie.modifying.aired\\\" name=\\\"aired\\\">\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>제작사</th>\\r\\n                      <td>\\r\\n                        <mat-form-field class=\\\"form-item\\\">\\r\\n                          <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"modifying.studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n                          <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>메모</th>\\r\\n                      <td>\\r\\n                        <mat-form-field class=\\\"form-item\\\">\\r\\n                          <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"movie.modifying.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n                        </mat-form-field>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        <button mat-button type=\\\"submit\\\">\\r\\n                          <mat-icon>check_circle_outline</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-button type=\\\"button\\\" (click)=\\\"cancelModify(m)\\\">\\r\\n                          <mat-icon>cancel</mat-icon>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n                </form>\\r\\n\\r\\n              </td>\\r\\n            </tr>\\r\\n\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n  <div class=\\\"container\\\" id=\\\"writing-area\\\" #writingArea>\\r\\n    <table *ngIf=\\\"!writing\\\" class=\\\"table table-dark\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span class=\\\"clickable\\\" (click)=\\\"writeMovie()\\\">+ 새로 작성하기</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <form (submit)=\\\"onWriteSubmit()\\\" *ngIf=\\\"writing\\\">\\r\\n      <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n        <tr>\\r\\n          <th style=\\\"width: 30%;\\\">검색</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item-select\\\">\\r\\n              <mat-label>검색옵션</mat-label>\\r\\n              <mat-select #writeSearchOption>\\r\\n                <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n              <input matInput #writeSearchBox (keyup.enter)=\\\"searchMovie(writeSearchOption.value, writeSearchBox.value)\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"searchMovie(writeSearchOption.value, writeSearchBox.value)\\\">\\r\\n              <mat-icon>search</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n        <tr>\\r\\n          <th rowspan=\\\"2\\\">TVA</th>\\r\\n          <td>\\r\\n            <mat-progress-bar *ngIf=\\\"!tvas\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n            <mat-form-field *ngIf=\\\"tvas\\\" class=\\\"form-item\\\">\\r\\n              <mat-label>카테고리</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"linked.idx\\\" name=\\\"tva_category\\\">\\r\\n                <mat-option *ngFor=\\\"let tva of tvas; index as t\\\" [value]=\\\"t\\\">{{tva.category}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field *ngIf=\\\"tvas && linked\\\" class=\\\"form-item\\\">\\r\\n              <mat-label>시리즈</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"linked.series\\\" name=\\\"tva_series\\\" (selectionChange)=\\\"seriesSelect()\\\">\\r\\n                <mat-option *ngFor=\\\"let series of tvas[linked.idx].series; index as r\\\" [value]=\\\"r\\\">{{series.title}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>시리즈 메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"시리즈 메모\\\" [(ngModel)]=\\\"seriesMemo\\\" name=\\\"seriesMemo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>\\r\\n            <mat-radio-group [(ngModel)]=\\\"writingMovie.title.rv\\\" name=\\\"rv\\\">\\r\\n              <table class=\\\"table table-borderless\\\">\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"writingMovie.title.kor\\\" name=\\\"kor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"writingMovie.title.eng\\\" name=\\\"eng\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"writingMovie.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </mat-radio-group>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>순서</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"writingMovie.order\\\" name=\\\"order\\\" min=\\\"1\\\">\\r\\n              <span matSuffix>번째</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 시기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"개봉일\\\" [(ngModel)]=\\\"writingMovie.aired\\\" name=\\\"aired\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제작사</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"modifying.studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n              <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"writingMovie.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button mat-button type=\\\"submit\\\">\\r\\n              <mat-icon>check_circle_outline</mat-icon>\\r\\n            </button>\\r\\n            <button mat-button type=\\\"button\\\" (click)=\\\"cancelWrite()\\\">\\r\\n              <mat-icon>cancel</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </div>\\r\\n</section>\\r\\n\"","export default \"<section></section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <h3>페이지가 존재하지 않습니다.</h3><br>\\r\\n  <a mat-flat-button routerLink=\\\"/\\\">홈으로</a>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\"></section>\\r\\n\"","export default \"<section class=\\\"container\\\">\\r\\n  <div class=\\\"border border-secondary info-area\\\">\\r\\n    <h4>시청 예정</h4>\\r\\n    <p>항목 수: {{plans?.length}}</p>\\r\\n    <p>\\r\\n      <button mat-flat-button (click)=\\\"openAll()\\\">전체 열기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"closeAll()\\\">전체 닫기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"write(); writingArea.scrollIntoView()\\\">새 항목 작성</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"!plans\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <table class=\\\"table table-dark\\\" *ngIf=\\\"plans\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"align(0, 0)\\\">타입</th>\\r\\n        <th (click)=\\\"align(0, 1)\\\">제목</th>\\r\\n        <th (click)=\\\"align(0, 2)\\\" colspan=\\\"120\\\">제작사</th>\\r\\n        <th (click)=\\\"align(0, 3)\\\">방영분기</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let item of plans; index as i\\\">\\r\\n\\r\\n        <tr [attr.id]=\\\"item._id\\\">\\r\\n          <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n          <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n          <td>\\r\\n            <span class=\\\"clickable\\\" (click)=\\\"click(item._id)\\\">{{item.title[item.title.rv]}}</span>\\r\\n          </td>\\r\\n          <td colspan=\\\"120\\\" *ngIf=\\\"item.studios.length == 0\\\">-</td>\\r\\n          <ng-container *ngIf=\\\"item.studios.length > 0\\\">\\r\\n            <td *ngFor=\\\"let studio of item.studios\\\" [attr.colspan]=\\\"120 / item.studios.length\\\">\\r\\n              <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <td>{{getQuarterFromAiredDate(item.aired)}}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.opened\\\">\\r\\n          <td colspan=\\\"123\\\" style=\\\"padding: 0px;\\\">\\r\\n          \\r\\n            <!-- detail -->\\r\\n            <table class=\\\"table table-dark\\\">\\r\\n              <tr>\\r\\n                <td [attr.rowspan]=\\\"8 + item.studios.length\\\" style=\\\"text-align: center; vertical-align: middle;\\\" *ngIf=\\\"item.img\\\">\\r\\n                  <img [src]=\\\"item.img\\\">\\r\\n                </td>\\r\\n                <td [attr.rowspan]=\\\"8 + item.studios.length\\\" style=\\\"text-align: center; vertical-align: middle;\\\" *ngIf=\\\"!item.img\\\">\\r\\n                  <img src=\\\"assets/no_image.jpg\\\">\\r\\n                </td>\\r\\n                <th>타입</th>\\r\\n                <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n                <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th rowspan=\\\"3\\\" style=\\\"vertical-align: middle;\\\">제목</th>\\r\\n                <td *ngIf=\\\"item.title.rv == 'kor'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.kor}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'kor' && item.title.kor\\\">\\r\\n                  {{item.title.kor}}\\r\\n                </td>\\r\\n                <td *ngIf=\\\"!item.title.kor\\\" class=\\\"no-item\\\">-</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'eng'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.eng}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'eng' && item.title.eng\\\">\\r\\n                  {{item.title.eng}}\\r\\n                </td>\\r\\n                <td *ngIf=\\\"!item.title.eng\\\" class=\\\"no-item\\\">-</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'jpn'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.jpn}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'jpn' && item.title.jpn\\\">\\r\\n                  {{item.title.jpn}}\\r\\n                </td>\\r\\n                <td *ngIf=\\\"!item.title.jpn\\\" class=\\\"no-item\\\">-</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>방영 시기</th>\\r\\n                <td>{{item.aired}}</td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let studio of item.studios; index as j\\\">\\r\\n                <th *ngIf=\\\"j == 0\\\" [attr.rowspan]=\\\"item.studios.length\\\" style=\\\"vertical-align: middle;\\\">제작사</th>\\r\\n                <td>\\r\\n                  <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>메모</th>\\r\\n                <td>{{item.memo}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>MyAnimeList</th>\\r\\n                <td>\\r\\n                  <a [href]=\\\"'https://myanimelist.net/anime/' + item.mal_id\\\" target=\\\"_blank\\\" *ngIf=\\\"item.mal_id\\\" class=\\\"detail-link\\\">\\r\\n                    {{item.mal_id}}\\r\\n                  </a>\\r\\n                  <span *ngIf=\\\"!item.mal_id\\\" class=\\\"no-item\\\">-</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                  <a mat-button [href]=\\\"searchService.namuwiki(item.title[item.title.rv])\\\" target=\\\"_blank\\\" [matTooltip]=\\\"searchService.namuwiki_label()\\\" class=\\\"no-hover-link\\\">\\r\\n                    <mat-icon>{{searchService.namuwiki_icon()}}</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"modify(item._id)\\\" matTooltip=\\\"수정\\\">\\r\\n                    <mat-icon>create</mat-icon>\\r\\n                  </button>\\r\\n                  <a mat-button [routerLink]=\\\"['/', planMap.get(item._id).type, 'data-from-plan', item._id]\\\" class=\\\"no-hover-link\\\" matTooltip=\\\"시청 완료 목록으로\\\">\\r\\n                    <mat-icon>input</mat-icon>\\r\\n                  </a>\\r\\n                  <a mat-button [routerLink]=\\\"['/watching/data-from-plan', item._id]\\\" class=\\\"no-hover-link\\\" matTooltip=\\\"시청 중인 목록으로\\\">\\r\\n                    <mat-icon>add_to_queue</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"remove(item._id, i, true)\\\" matTooltip=\\\"삭제\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.modifying\\\">\\r\\n          <td colspan=\\\"122\\\">\\r\\n            \\r\\n            <!-- modifying -->\\r\\n            <form (submit)=\\\"onModifySubmit(item._id, i, true)\\\">\\r\\n              <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 30%;\\\">검색</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item-select\\\">\\r\\n                      <mat-label>검색옵션</mat-label>\\r\\n                      <mat-select #searchOption>\\r\\n                        <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                        <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                        <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n                      <input matInput #searchBox (keyup.enter)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                      <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n                <tr>\\r\\n                  <th>제목</th>\\r\\n                  <td>\\r\\n                    <mat-radio-group [(ngModel)]=\\\"item.modifying.title.rv\\\" name=\\\"rv\\\">\\r\\n                      <table class=\\\"table table-borderless inner-table\\\">\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"item.modifying.title.kor\\\" name=\\\"kor\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"item.modifying.title.eng\\\" name=\\\"eng\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"item.modifying.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </table>\\r\\n                    </mat-radio-group>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>방영 시기</th>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"item.modifying.aired\\\" name=\\\"aired\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>제작사</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n                      <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>메모</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"item.modifying.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                    <button mat-button type=\\\"submit\\\">\\r\\n                      <mat-icon>check_circle_outline</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-button type=\\\"button\\\" (click)=\\\"closeEdit(item._id)\\\">\\r\\n                      <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </form>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n  <div class=\\\"container\\\" #writingArea>\\r\\n    <table *ngIf=\\\"!writing\\\" class=\\\"table table-dark\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span class=\\\"clickable\\\" (click)=\\\"write()\\\">+ 새로 작성하기</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <form (submit)=\\\"onWriteSubmit()\\\" *ngIf=\\\"writing\\\">\\r\\n      <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n        <tr>\\r\\n          <th style=\\\"width: 30%;\\\">검색</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item-select\\\">\\r\\n              <mat-label>검색옵션</mat-label>\\r\\n              <mat-select #searchOption>\\r\\n                <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n              <input matInput #searchBox (keyup.enter)=\\\"search(searchOption.value, searchBox.value, writing)\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(searchOption.value, searchBox.value, writing)\\\">\\r\\n              <mat-icon>search</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n        <tr>\\r\\n          <th>타입</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <mat-label>타입</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"writing.type\\\" name=\\\"type\\\">\\r\\n                <mat-option value=\\\"tva\\\">TVA</mat-option>\\r\\n                <mat-option value=\\\"movie\\\">극장판</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>\\r\\n            <mat-radio-group [(ngModel)]=\\\"writing.title.rv\\\" name=\\\"rv\\\">\\r\\n              <table class=\\\"table table-borderless\\\">\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"writing.title.kor\\\" name=\\\"kor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"writing.title.eng\\\" name=\\\"eng\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"writing.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </mat-radio-group>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 시기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"writing.aired\\\" name=\\\"aired\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제작사</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n              <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"writing.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button mat-button type=\\\"submit\\\">\\r\\n              <mat-icon>check_circle_outline</mat-icon>\\r\\n            </button>\\r\\n            <button mat-button type=\\\"button\\\" (click)=\\\"closeEdit()\\\">\\r\\n              <mat-icon>cancel</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"container\\\">\\r\\n  <div class=\\\"border border-secondary info-area\\\">\\r\\n    <h4>TVA</h4>\\r\\n    <p>카테고리 수: {{tvas?.length}}</p>\\r\\n    <!-- <p>TVA 수: {{count()}}</p> -->\\r\\n    <p>TVA 수: {{counts.sequences}}</p>\\r\\n    <p>에피소드 수: {{counts.episodes}}</p>\\r\\n    <p>\\r\\n      <button mat-flat-button (click)=\\\"openAll()\\\">전체 열기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"closeAll()\\\">전체 닫기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"writeTva(); writingArea.scrollIntoView()\\\">새 항목 작성</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"!tvas\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <div *ngIf=\\\"tvas\\\">\\r\\n    <table class=\\\"table table-dark\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th (click)=\\\"align(0, 0)\\\">카테고리</th>\\r\\n          <th (click)=\\\"align(0, 1)\\\">시리즈</th>\\r\\n          <th (click)=\\\"align(0, 2)\\\">제목</th>\\r\\n          <th>시즌</th>\\r\\n          <th (click)=\\\"align(0, 3)\\\" colspan=\\\"120\\\">제작사</th>\\r\\n          <th (click)=\\\"align(0, 4)\\\">화수</th>\\r\\n          <th (click)=\\\"align(0, 5)\\\">방영분기</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngFor=\\\"let tva of tvas; index as t\\\">\\r\\n\\r\\n          <ng-container *ngFor=\\\"let series of tva.series; index as i\\\">\\r\\n            <ng-container *ngFor=\\\"let sequence of series.sequences; index as j\\\">\\r\\n              <tr [attr.id]=\\\"tva._id\\\">\\r\\n                <td *ngIf=\\\"tva.series.length > 1 && i == 0 && j == 0\\\" [attr.rowspan]=\\\"allElementsLength(t)\\\"\\r\\n                  class=\\\"table-category\\\" style=\\\"vertical-align: middle;\\\">{{tva.category}}</td>\\r\\n                <td *ngIf=\\\"tva.series.length > 1 && j == 0\\\" class=\\\"table-series\\\"\\r\\n                  [attr.rowspan]=\\\"tva.series[i].sequences.length\\\" style=\\\"vertical-align: middle;\\\">{{series.title}}</td>\\r\\n                <td *ngIf=\\\"tva.series.length == 1 && tva.series[0].sequences.length > 1 && j == 0\\\"\\r\\n                  [attr.rowspan]=\\\"tva.series[0].sequences.length\\\" colspan=\\\"2\\\" class=\\\"table-category\\\"\\r\\n                  style=\\\"vertical-align: middle; text-align: center;\\\">{{tva.category}}</td>\\r\\n                <td *ngIf=\\\"tva.series.length == 1 && tva.series[0].sequences.length == 1\\\" colspan=\\\"2\\\"></td>\\r\\n                <td>\\r\\n                  <span class=\\\"clickable\\\" (click)=\\\"clickTva(t, i, j)\\\">{{sequence.title[sequence.title.rv]}}</span>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"tva.series.length == 1 && tva.series[0].sequences.length == 1; else seasonTemplate\\\"></td>\\r\\n                <ng-template #seasonTemplate>\\r\\n                  <td>{{sequence.season}}</td>\\r\\n                </ng-template>\\r\\n                <td *ngFor=\\\"let studio of sequence.studios\\\" [attr.colspan]=\\\"120 / sequence.studios.length\\\">\\r\\n                  <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                </td>\\r\\n                <td>{{sequence.episodes}}</td>\\r\\n                <td>'{{sequence.premiered.year.toString().substring(2)}} - {{sequence.premiered.quarter}}</td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"tva.opened && i == tva.series.length-1 && j == series.sequences.length-1\\\">\\r\\n                <td colspan=\\\"126\\\" style=\\\"padding: 0px;\\\">\\r\\n\\r\\n                  <!-- detail -->\\r\\n                  <table class=\\\"table table-dark table-hover\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"text-align: center; vertical-align: middle;\\\"\\r\\n                        [attr.rowspan]=\\\"(tva.category_movie ? 14 : 13) + tva.series[tva.opened.series].sequences[tva.opened.sequence].studios.length\\\">\\r\\n                        <img [src]=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].img\\\">\\r\\n                      </td>\\r\\n                      <th>카테고리</th>\\r\\n                      <td>\\r\\n                        <span class=\\\"clickable\\\" (click)=\\\"editCategory(t)\\\">{{tva.category}}</span>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr *ngIf=\\\"tva.opened.linked\\\">\\r\\n                      <th>극장판</th>\\r\\n                      <td>\\r\\n                        <a [routerLink]=\\\"['/movie', tva.opened.linked._id, tva.opened.linked.series, 0]\\\" class=\\\"detail-link\\\">\\r\\n                          {{tva.opened.linked.title}}\\r\\n                        </a>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>시리즈</th>\\r\\n                      <td>{{tva.series[tva.opened.series].title}}</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>시리즈 메모</th>\\r\\n                      <td>{{tva.series[tva.opened.series].memo}}</td>\\r\\n                    </tr>\\r\\n                    <tr><td></td><td></td></tr>\\r\\n                    <tr>\\r\\n                      <th rowspan=\\\"3\\\" style=\\\"vertical-align: middle;\\\">제목</th>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv == 'kor'\\\">\\r\\n                        <b>\\r\\n                          {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.kor}}\\r\\n                        </b>\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv != 'kor'\\\">\\r\\n                        {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.kor}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv == 'eng'\\\">\\r\\n                        <b>\\r\\n                          {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.eng}}\\r\\n                        </b>\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv != 'eng'\\\">\\r\\n                        {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.eng}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv == 'jpn'\\\">\\r\\n                        <b>\\r\\n                          {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.jpn}}\\r\\n                        </b>\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].title.rv != 'jpn'\\\">\\r\\n                        {{tva.series[tva.opened.series].sequences[tva.opened.sequence].title.jpn}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>방영 분기</th>\\r\\n                      <td>\\r\\n                        {{tva.series[tva.opened.series].sequences[tva.opened.sequence].premiered.year}}년 {{tva.series[tva.opened.series].sequences[tva.opened.sequence].premiered.quarter}}분기\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>방영 시기</th>\\r\\n                      <td>\\r\\n                        {{tva.series[tva.opened.series].sequences[tva.opened.sequence].aired.start}} ~ {{tva.series[tva.opened.series].sequences[tva.opened.sequence].aired.end}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>방영 화수</th>\\r\\n                      <td>{{tva.series[tva.opened.series].sequences[tva.opened.sequence].episodes}}화</td>\\r\\n                    </tr>\\r\\n                    <tr *ngFor=\\\"let studio of tva.series[tva.opened.series].sequences[tva.opened.sequence].studios; index as s\\\">\\r\\n                      <th *ngIf=\\\"s == 0\\\" style=\\\"vertical-align: middle;\\\"\\r\\n                        [attr.rowspan]=\\\"tva.series[tva.opened.series].sequences[tva.opened.sequence].studios.length\\\">제작사</th>\\r\\n                      <td>\\r\\n                        <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>메모</th>\\r\\n                      <td>{{tva.series[tva.opened.series].sequences[tva.opened.sequence].memo}}</td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <th>MyAnimeList</th>\\r\\n                      <td>\\r\\n                        <a [href]=\\\"'https://myanimelist.net/anime/' + tva.series[tva.opened.series].sequences[tva.opened.sequence].mal_id\\\" target=\\\"_blank\\\" class=\\\"detail-link\\\">\\r\\n                          {{tva.series[tva.opened.series].sequences[tva.opened.sequence].mal_id}}\\r\\n                        </a>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    <tr>\\r\\n                      <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                        <a mat-button [href]=\\\"searchService.namuwiki(tva.series[tva.opened.series].title)\\\" target=\\\"_blank\\\" [matTooltip]=\\\"searchService.namuwiki_label()\\\" class=\\\"no-hover-link\\\">\\r\\n                          <mat-icon>{{searchService.namuwiki_icon()}}</mat-icon>\\r\\n                        </a>\\r\\n                        <button mat-button (click)=\\\"modifyTva(t, tva.opened.series, tva.opened.sequence)\\\" matTooltip=\\\"수정\\\">\\r\\n                          <mat-icon>create</mat-icon>\\r\\n                        </button>\\r\\n                        <button mat-button (click)=\\\"removeTva(t, tva.opened.series, tva.opened.sequence)\\\" matTooltip=\\\"삭제\\\">\\r\\n                          <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"tva.modifying && i == tva.series.length-1 && j == series.sequences.length-1\\\">\\r\\n                <td colspan=\\\"126\\\">\\r\\n                  \\r\\n                  <!-- modifying -->\\r\\n                  <form (submit)=\\\"onModifySubmit(t, modifying.series, modifying.sequence)\\\">\\r\\n                    <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n                      <tr>\\r\\n                        <th style=\\\"width: 30%;\\\">검색</th>\\r\\n                        <td>\\r\\n                          <mat-form-field class=\\\"form-item-select\\\">\\r\\n                            <mat-label>검색옵션</mat-label>\\r\\n                            <mat-select #searchOption>\\r\\n                              <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                              <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                              <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n                            </mat-select>\\r\\n                          </mat-form-field>\\r\\n                          <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n                            <input matInput #searchBox (keyup.enter)=\\\"searchTva(searchOption.value, searchBox.value, t)\\\">\\r\\n                          </mat-form-field>\\r\\n                          <button mat-flat-button type=\\\"button\\\" (click)=\\\"searchTva(searchOption.value, searchBox.value, t)\\\">\\r\\n                            <mat-icon>search</mat-icon>\\r\\n                          </button>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n                      <tr>\\r\\n                        <th>시리즈</th>\\r\\n                        <td>\\r\\n                          <mat-form-field class=\\\"form-item\\\">\\r\\n                            <input matInput placeholder=\\\"시리즈\\\" [formControl]=\\\"seriesControl\\\" [matAutocomplete]=\\\"auto\\\" name=\\\"seriesTitle\\\">\\r\\n                            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n                              <mat-option *ngFor=\\\"let option of seriesFilteredOptions | async\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\r\\n                            </mat-autocomplete>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th>제목</th>\\r\\n                        <td>\\r\\n                          <mat-radio-group [(ngModel)]=\\\"tva.modifying.title.rv\\\" name=\\\"rv\\\">\\r\\n                            <table class=\\\"table table-borderless inner-table\\\">\\r\\n                              <tr>\\r\\n                                <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                                <td>\\r\\n                                  <mat-form-field class=\\\"form-item\\\">\\r\\n                                    <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"tva.modifying.title.kor\\\" name=\\\"kor\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                              <tr>\\r\\n                                <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                                <td>\\r\\n                                  <mat-form-field class=\\\"form-item\\\">\\r\\n                                    <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"tva.modifying.title.eng\\\" name=\\\"eng\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                              <tr>\\r\\n                                <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                                <td>\\r\\n                                  <mat-form-field class=\\\"form-item\\\">\\r\\n                                    <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"tva.modifying.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                                  </mat-form-field>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                            </table>\\r\\n                          </mat-radio-group>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th>시즌</th>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput type=\\\"number\\\" [(ngModel)]=\\\"tva.modifying.season\\\" name=\\\"season\\\" min=\\\"1\\\">\\r\\n                            <span matSuffix>기</span>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th rowspan=\\\"2\\\">방영 분기</th>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"연도\\\" type=\\\"number\\\" [(ngModel)]=\\\"tva.modifying.premiered.year\\\" name=\\\"year\\\">\\r\\n                            <span matSuffix>년</span>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"분기\\\" type=\\\"number\\\" [(ngModel)]=\\\"tva.modifying.premiered.quarter\\\" name=\\\"quarter\\\" max=\\\"4\\\" min=\\\"1\\\">\\r\\n                            <span matSuffix>분기</span>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th rowspan=\\\"2\\\">방영 시기</th>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"tva.modifying.aired.start\\\" name=\\\"aired_start\\\">\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"방영 종료일\\\" [(ngModel)]=\\\"tva.modifying.aired.end\\\" name=\\\"aired_end\\\">\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th>방영 화수</th>\\r\\n                        <td>\\r\\n                          <mat-form-field>\\r\\n                            <input matInput type=\\\"number\\\" [(ngModel)]=\\\"tva.modifying.episodes\\\" name=\\\"episodes\\\" min=\\\"1\\\">\\r\\n                            <span matSuffix>화</span>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th>제작사</th>\\r\\n                        <td>\\r\\n                          <mat-form-field class=\\\"form-item\\\">\\r\\n                            <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"modifying.studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n                            <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <th>메모</th>\\r\\n                        <td>\\r\\n                          <mat-form-field class=\\\"form-item\\\">\\r\\n                            <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"tva.modifying.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n                          </mat-form-field>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                          <button mat-button type=\\\"submit\\\">\\r\\n                            <mat-icon>check_circle_outline</mat-icon>\\r\\n                          </button>\\r\\n                          <button mat-button type=\\\"button\\\" (click)=\\\"cancelModify(t)\\\">\\r\\n                            <mat-icon>cancel</mat-icon>\\r\\n                          </button>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </table>\\r\\n                  </form>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-container>\\r\\n          </ng-container>\\r\\n\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n  <div class=\\\"container\\\" id=\\\"writing-area\\\" #writingArea>\\r\\n    <table *ngIf=\\\"!writing\\\" class=\\\"table table-dark\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span class=\\\"clickable\\\" (click)=\\\"writeTva()\\\">+ 새로 작성하기</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <form (submit)=\\\"onWriteSubmit()\\\" *ngIf=\\\"writing\\\">\\r\\n      <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n        <tr>\\r\\n          <th style=\\\"width: 30%;\\\">검색</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item-select\\\">\\r\\n              <mat-label>검색옵션</mat-label>\\r\\n              <mat-select #writeSearchOption>\\r\\n                <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n              <input matInput #writeSearchBox (keyup.enter)=\\\"searchTva(writeSearchOption.value, writeSearchBox.value)\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"searchTva(writeSearchOption.value, writeSearchBox.value)\\\">\\r\\n              <mat-icon>search</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n        <tr>\\r\\n          <th>카테고리</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <input matInput placeholder=\\\"카테고리\\\" [formControl]=\\\"categoryControl\\\" [matAutocomplete]=\\\"autoWriteCategory\\\" name=\\\"categoryTitle\\\">\\r\\n              <mat-autocomplete #autoWriteCategory=\\\"matAutocomplete\\\" (optionSelected)=\\\"categoryInput($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let option of categoryFilteredOptions | async\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>시리즈</th>\\r\\n          <td>\\r\\n            <mat-form-field [formGroup]=\\\"writeFormGroup\\\" class=\\\"form-item\\\">\\r\\n              <input matInput placeholder=\\\"시리즈\\\" [matAutocomplete]=\\\"autoWriteSeries\\\" formControlName=\\\"writeSeriesControl\\\">\\r\\n              <mat-autocomplete #autoWriteSeries=\\\"matAutocomplete\\\" (optionSelected)=\\\"seriesInput($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let option of seriesFilteredOptions | async\\\" [value]=\\\"option\\\">{{option}}</mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>시리즈 메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"시리즈 메모\\\" [(ngModel)]=\\\"seriesMemo\\\" name=\\\"seriesMemo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>\\r\\n            <mat-radio-group [(ngModel)]=\\\"writingTva.title.rv\\\" name=\\\"rv\\\">\\r\\n              <table class=\\\"table table-borderless\\\">\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"writingTva.title.kor\\\" name=\\\"kor\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-icon-button (click)=\\\"toCategory('kor')\\\" type=\\\"button\\\">\\r\\n                      <mat-icon>swap_vert</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"writingTva.title.eng\\\" name=\\\"eng\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-icon-button (click)=\\\"toCategory('eng')\\\" type=\\\"button\\\">\\r\\n                      <mat-icon>swap_vert</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"writingTva.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-icon-button (click)=\\\"toCategory('jpn')\\\" type=\\\"button\\\">\\r\\n                      <mat-icon>swap_vert</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </mat-radio-group>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>시즌</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"writingTva.season\\\" name=\\\"season\\\" min=\\\"1\\\">\\r\\n              <span matSuffix>기</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th rowspan=\\\"2\\\">방영 분기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"연도\\\" type=\\\"number\\\" [(ngModel)]=\\\"writingTva.premiered.year\\\" name=\\\"year\\\">\\r\\n              <span matSuffix>년</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"분기\\\" type=\\\"number\\\" [(ngModel)]=\\\"writingTva.premiered.quarter\\\" name=\\\"quarter\\\" max=\\\"4\\\" min=\\\"1\\\">\\r\\n              <span matSuffix>분기</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th rowspan=\\\"2\\\">방영 시기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"writingTva.aired.start\\\" name=\\\"aired_start\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"방영 종료일\\\" [(ngModel)]=\\\"writingTva.aired.end\\\" name=\\\"aired_end\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 화수</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"number\\\" [(ngModel)]=\\\"writingTva.episodes\\\" name=\\\"episodes\\\" min=\\\"1\\\">\\r\\n              <span matSuffix>화</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제작사</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"modifying.studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n              <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"writingTva.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button mat-button type=\\\"submit\\\">\\r\\n              <mat-icon>check_circle_outline</mat-icon>\\r\\n            </button>\\r\\n            <button mat-button type=\\\"button\\\" (click)=\\\"cancelWrite()\\\">\\r\\n              <mat-icon>cancel</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"container\\\">\\r\\n  <div class=\\\"border border-secondary info-area\\\">\\r\\n    <h4>시청 중</h4>\\r\\n    <p>방영 중인 항목 수: {{airings?.length}}</p>\\r\\n    <p>완결작 수: {{ends?.length}}</p>\\r\\n    <p class=\\\"info-button-area\\\">\\r\\n      <button mat-flat-button (click)=\\\"openAll()\\\">전체 열기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"closeAll()\\\">전체 닫기</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"write(); writingArea.scrollIntoView()\\\">새 항목 작성</button>&nbsp;\\r\\n      <button mat-flat-button (click)=\\\"openTodayAiring()\\\" title=\\\"오늘이라고 적었긴 한데 그냥 24시간 이내 방영작임\\\">오늘 방영작 펼치기</button>\\r\\n    </p>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"!airings\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n  <table class=\\\"table table-dark\\\" *ngIf=\\\"airings\\\">\\r\\n    <caption>방영 중인 목록</caption>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"align(0, 0)\\\">타입</th>\\r\\n        <th (click)=\\\"align(0, 1)\\\">제목</th>\\r\\n        <th (click)=\\\"align(0, 2)\\\" colspan=\\\"120\\\">제작사</th>\\r\\n        <th (click)=\\\"align(0, 4)\\\">방영요일</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let item of airings; index as i\\\">\\r\\n\\r\\n        <tr [attr.id]=\\\"item._id\\\">\\r\\n          <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n          <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n          <td>\\r\\n            <span class=\\\"clickable\\\" (click)=\\\"click(item._id)\\\">{{item.title[item.title.rv]}}</span>\\r\\n          </td>\\r\\n          <td *ngFor=\\\"let studio of item.studios\\\" [attr.colspan]=\\\"120 / item.studios.length\\\">\\r\\n            <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n          </td>\\r\\n          <td>{{getDay(item.broadcast)}}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.opened\\\">\\r\\n          <td colspan=\\\"123\\\" style=\\\"padding: 0px;\\\">\\r\\n          \\r\\n            <!-- detail -->\\r\\n            <table class=\\\"table table-dark\\\">\\r\\n              <tr>\\r\\n                <td [attr.rowspan]=\\\"8 + item.studios.length\\\" style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                  <img [src]=\\\"item.img\\\">\\r\\n                </td>\\r\\n                <th>타입</th>\\r\\n                <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n                <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th rowspan=\\\"3\\\" style=\\\"vertical-align: middle;\\\">제목</th>\\r\\n                <td *ngIf=\\\"item.title.rv == 'kor'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.kor}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'kor'\\\">\\r\\n                  {{item.title.kor}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'eng'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.eng}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'eng'\\\">\\r\\n                  {{item.title.eng}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'jpn'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.jpn}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'jpn'\\\">\\r\\n                  {{item.title.jpn}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>방영 분기</th>\\r\\n                <td>{{item.premiered.year}}년 {{item.premiered.quarter}}분기</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>방영 시기</th>\\r\\n                <td>{{item.aired}}</td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let studio of item.studios; index as j\\\">\\r\\n                <th *ngIf=\\\"j == 0\\\" [attr.rowspan]=\\\"item.studios.length\\\" style=\\\"vertical-align: middle;\\\">제작사</th>\\r\\n                <td>\\r\\n                  <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>메모</th>\\r\\n                <td>{{item.memo}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>MyAnimeList</th>\\r\\n                <td>\\r\\n                  <a [href]=\\\"'https://myanimelist.net/anime/' + item.mal_id\\\" target=\\\"_blank\\\" class=\\\"detail-link\\\">\\r\\n                    {{item.mal_id}}\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr><td colspan=\\\"3\\\">오늘: {{getToday()}}</td></tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"3\\\" class=\\\"inner-table-section\\\" *ngIf=\\\"!item.videos || (item.videos && item.videos.length > 0)\\\">\\r\\n\\r\\n                  <mat-progress-bar *ngIf=\\\"!item.videos\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                  <table class=\\\"table table-dark\\\" *ngIf=\\\"item.videos\\\">\\r\\n                    <tr *ngFor=\\\"let video of item.videos\\\">\\r\\n                      <td>{{getDate(video.date)}}</td>\\r\\n                      <td>{{video.name}}</td>\\r\\n                      <td>{{getSize(video.size)}}</td>\\r\\n                      <td>\\r\\n                        <a [href]=\\\"video.magnet | safeUrl\\\" class=\\\"download-link\\\">▶</a>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngIf=\\\"!item.videos || (item.videos && item.videos.length > 0)\\\"><td colspan=\\\"3\\\"></td></tr>\\r\\n\\r\\n              <tr>\\r\\n                <td colspan=\\\"3\\\" class=\\\"inner-table-section\\\" *ngIf=\\\"!item.ohys || (item.ohys && item.ohys.length > 0)\\\">\\r\\n\\r\\n                  <mat-progress-bar *ngIf=\\\"!item.ohys\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                  <table class=\\\"table table-dark\\\" *ngIf=\\\"item.ohys\\\">\\r\\n                    <tr *ngFor=\\\"let ohys of item.ohys\\\">\\r\\n                      <td>{{ohys.name}}</td>\\r\\n                      <td>\\r\\n                        <a [href]=\\\"ohys.link\\\" class=\\\"download-link\\\" download>@</a>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <a [href]=\\\"ohys.magnet | safeUrl\\\" class=\\\"download-link\\\">▶</a>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngIf=\\\"!item.ohys || (item.ohys && item.ohys.length > 0)\\\"><td colspan=\\\"3\\\"></td></tr>\\r\\n\\r\\n              <tr>\\r\\n                <td colspan=\\\"3\\\" class=\\\"inner-table-section\\\" *ngIf=\\\"!item.subtitles || (item.subtitles && item.subtitles.length > 0)\\\">\\r\\n\\r\\n                  <mat-progress-bar *ngIf=\\\"!item.subtitles\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n                  <table class=\\\"table table-dark\\\" *ngIf=\\\"item.subtitles\\\">\\r\\n                    <tr *ngFor=\\\"let subtitle of item.subtitles\\\">\\r\\n                      <td>{{getDate(subtitle.date)}}</td>\\r\\n                      <td>제{{subtitle.episode}}화</td>\\r\\n                      <td>{{subtitle.by}}</td>\\r\\n                      <td><a class=\\\"download-link\\\" [href]=\\\"subtitle.link\\\" target=\\\"_blank\\\">페이지로 이동</a></td>\\r\\n                    </tr>\\r\\n                  </table>\\r\\n\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"3\\\" style=\\\"text-align: center;\\\">\\r\\n                  <a mat-button [href]=\\\"searchService.namuwiki(item.title[item.title.rv])\\\" target=\\\"_blank\\\" [matTooltip]=\\\"searchService.namuwiki_label()\\\" class=\\\"no-hover-link\\\">\\r\\n                    <mat-icon>{{searchService.namuwiki_icon()}}</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"modify(item._id)\\\" matTooltip=\\\"수정\\\">\\r\\n                    <mat-icon>create</mat-icon>\\r\\n                  </button>\\r\\n                  <a mat-button class=\\\"no-hover-link\\\" [routerLink]=\\\"['/', watchingMap.get(item._id).type, 'data-from-watching', item._id]\\\" matTooltip=\\\"시청 완료\\\">\\r\\n                    <mat-icon>input</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"remove(item._id, i, true)\\\" matTooltip=\\\"삭제\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.modifying\\\">\\r\\n          <td colspan=\\\"122\\\">\\r\\n            \\r\\n            <!-- modifying -->\\r\\n            <form (submit)=\\\"onModifySubmit(item._id, i, true)\\\">\\r\\n              <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 30%;\\\">검색</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item-select\\\">\\r\\n                      <mat-label>검색옵션</mat-label>\\r\\n                      <mat-select #searchOption>\\r\\n                        <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                        <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                        <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n                      <input matInput #searchBox (keyup.enter)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                      <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n                <tr>\\r\\n                  <th>제목</th>\\r\\n                  <td>\\r\\n                    <mat-radio-group [(ngModel)]=\\\"item.modifying.title.rv\\\" name=\\\"rv\\\">\\r\\n                      <table class=\\\"table table-borderless inner-table\\\">\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"item.modifying.title.kor\\\" name=\\\"kor\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"item.modifying.title.eng\\\" name=\\\"eng\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"item.modifying.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </table>\\r\\n                    </mat-radio-group>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th rowspan=\\\"2\\\">방영 분기</th>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"연도\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.modifying.premiered.year\\\" name=\\\"year\\\">\\r\\n                      <span matSuffix>년</span>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"분기\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.modifying.premiered.quarter\\\" name=\\\"quarter\\\" max=\\\"4\\\" min=\\\"1\\\">\\r\\n                      <span matSuffix>분기</span>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>방영 시기</th>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"item.modifying.aired\\\" name=\\\"aired\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>제작사</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n                      <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>메모</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"item.modifying.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                    <button mat-button type=\\\"submit\\\">\\r\\n                      <mat-icon>check_circle_outline</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-button type=\\\"button\\\" (click)=\\\"closeEdit(item._id)\\\">\\r\\n                      <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </form>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <table class=\\\"table table-dark\\\" *ngIf=\\\"ends\\\">\\r\\n    <caption>완결작 목록</caption>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th (click)=\\\"align(1, 0)\\\">타입</th>\\r\\n        <th (click)=\\\"align(1, 1)\\\">제목</th>\\r\\n        <th (click)=\\\"align(1, 2)\\\" colspan=\\\"120\\\">제작사</th>\\r\\n        <th (click)=\\\"align(1, 3)\\\">방영분기</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let item of ends; index as i\\\">\\r\\n\\r\\n        <tr [attr.id]=\\\"item._id\\\">\\r\\n          <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n          <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n          <td>\\r\\n            <span class=\\\"clickable\\\" (click)=\\\"click(item._id)\\\">{{item.title[item.title.rv]}}</span>\\r\\n          </td>\\r\\n          <td *ngFor=\\\"let studio of item.studios\\\" [attr.colspan]=\\\"120 / item.studios.length\\\">\\r\\n            <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n          </td>\\r\\n          <td>'{{item.premiered.year.toString().substring(2)}} - {{item.premiered.quarter}}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.opened\\\">\\r\\n          <td colspan=\\\"123\\\" style=\\\"padding: 0px;\\\">\\r\\n          \\r\\n            <!-- detail -->\\r\\n            <table class=\\\"table table-dark table-hover\\\">\\r\\n              <tr>\\r\\n                <td [attr.rowspan]=\\\"10 + item.studios.length\\\" style=\\\"text-align: center; vertical-align: middle;\\\">\\r\\n                  <img [src]=\\\"item.img\\\">\\r\\n                </td>\\r\\n                <th>타입</th>\\r\\n                <td *ngIf=\\\"item.type == 'tva'\\\">TVA</td>\\r\\n                <td *ngIf=\\\"item.type == 'movie'\\\">극장판</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th rowspan=\\\"3\\\" style=\\\"vertical-align: middle;\\\">제목</th>\\r\\n                <td *ngIf=\\\"item.title.rv == 'kor'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.kor}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'kor'\\\">\\r\\n                  {{item.title.kor}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'eng'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.eng}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'eng'\\\">\\r\\n                  {{item.title.eng}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td *ngIf=\\\"item.title.rv == 'jpn'\\\">\\r\\n                  <b>\\r\\n                    {{item.title.jpn}}\\r\\n                  </b>\\r\\n                </td>\\r\\n                <td *ngIf=\\\"item.title.rv != 'jpn'\\\">\\r\\n                  {{item.title.jpn}}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>방영 분기</th>\\r\\n                <td>{{item.premiered.year}}년 {{item.premiered.quarter}}분기</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>방영 시기</th>\\r\\n                <td>{{item.aired}}</td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let studio of item.studios; index as j\\\">\\r\\n                <th *ngIf=\\\"j == 0\\\" [attr.rowspan]=\\\"item.studios.length\\\" style=\\\"vertical-align: middle;\\\">제작사</th>\\r\\n                <td>\\r\\n                  <span class=\\\"clickable\\\" (click)=\\\"findByStudio(studio)\\\">{{studio}}</span>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>메모</th>\\r\\n                <td>{{item.memo}}</td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <th>MyAnimeList</th>\\r\\n                <td>\\r\\n                  <a [href]=\\\"'https://myanimelist.net/anime/' + item.mal_id\\\" target=\\\"_blank\\\" class=\\\"detail-link\\\">\\r\\n                    {{item.mal_id}}\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                  <a mat-button [href]=\\\"searchService.namuwiki(item.title[item.title.rv])\\\" target=\\\"_blank\\\" [matTooltip]=\\\"searchService.namuwiki_label()\\\" class=\\\"no-hover-link\\\">\\r\\n                    <mat-icon>{{searchService.namuwiki_icon()}}</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"findVideosAndSubtitles(item)\\\" matTooltip=\\\"영상/자막 찾기\\\">\\r\\n                    <mat-icon>find_in_page</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-button (click)=\\\"modify(item._id)\\\" matTooltip=\\\"수정\\\">\\r\\n                    <mat-icon>create</mat-icon>\\r\\n                  </button>\\r\\n                  <a mat-button class=\\\"no-hover-link\\\" [routerLink]=\\\"['/', watchingMap.get(item._id).type, 'data-from-watching', item._id]\\\" matTooltip=\\\"시청 완료\\\">\\r\\n                    <mat-icon>input</mat-icon>\\r\\n                  </a>\\r\\n                  <button mat-button (click)=\\\"remove(item._id, i, false)\\\" matTooltip=\\\"삭제\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"item.modifying\\\">\\r\\n          <td colspan=\\\"122\\\">\\r\\n            \\r\\n            <!-- modifying -->\\r\\n            <form (submit)=\\\"onModifySubmit(item._id, i, false)\\\">\\r\\n              <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n                <tr>\\r\\n                  <th style=\\\"width: 30%;\\\">검색</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item-select\\\">\\r\\n                      <mat-label>검색옵션</mat-label>\\r\\n                      <mat-select #searchOption>\\r\\n                        <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                        <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                        <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n                      <input matInput #searchBox (keyup.enter)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                    </mat-form-field>\\r\\n                    <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(searchOption.value, searchBox.value, item.modifying)\\\">\\r\\n                      <mat-icon>search</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n                <tr>\\r\\n                  <th>타입</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <mat-label>타입</mat-label>\\r\\n                      <mat-select [(ngModel)]=\\\"item.modifying.type\\\" name=\\\"type\\\">\\r\\n                        <mat-option value=\\\"tva\\\">TVA</mat-option>\\r\\n                        <mat-option value=\\\"movie\\\">극장판</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>제목</th>\\r\\n                  <td>\\r\\n                    <mat-radio-group [(ngModel)]=\\\"item.modifying.title.rv\\\" name=\\\"rv\\\">\\r\\n                      <table class=\\\"table table-borderless inner-table\\\">\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"item.modifying.title.kor\\\" name=\\\"kor\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"item.modifying.title.eng\\\" name=\\\"eng\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                          <td>\\r\\n                            <mat-form-field class=\\\"form-item\\\">\\r\\n                              <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"item.modifying.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                            </mat-form-field>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </table>\\r\\n                    </mat-radio-group>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th rowspan=\\\"2\\\">방영 분기</th>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"연도\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.modifying.premiered.year\\\" name=\\\"year\\\">\\r\\n                      <span matSuffix>년</span>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"분기\\\" type=\\\"number\\\" [(ngModel)]=\\\"item.modifying.premiered.quarter\\\" name=\\\"quarter\\\" max=\\\"4\\\" min=\\\"1\\\">\\r\\n                      <span matSuffix>분기</span>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>방영 시기</th>\\r\\n                  <td>\\r\\n                    <mat-form-field>\\r\\n                      <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"item.modifying.aired\\\" name=\\\"aired\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>제작사</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n                      <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th>메모</th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"item.modifying.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n                    <button mat-button type=\\\"submit\\\">\\r\\n                      <mat-icon>check_circle_outline</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-button type=\\\"button\\\" (click)=\\\"closeEdit(item._id)\\\">\\r\\n                      <mat-icon>cancel</mat-icon>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </form>\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</section>\\r\\n\\r\\n<section>\\r\\n  <div class=\\\"container\\\" id=\\\"writing-area\\\" #writingArea>\\r\\n    <table *ngIf=\\\"!writing\\\" class=\\\"table table-dark\\\">\\r\\n      <tr>\\r\\n        <td>\\r\\n          <span class=\\\"clickable\\\" (click)=\\\"write()\\\">+ 새로 작성하기</span>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n    <form (submit)=\\\"onWriteSubmit()\\\" *ngIf=\\\"writing\\\">\\r\\n      <table class=\\\"table table-secondary\\\" style=\\\"width: 70%; margin: auto;\\\">\\r\\n        <tr>\\r\\n          <th style=\\\"width: 30%;\\\">검색</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item-select\\\">\\r\\n              <mat-label>검색옵션</mat-label>\\r\\n              <mat-select #searchOption>\\r\\n                <mat-option value=\\\"onnada\\\">Onnada</mat-option>\\r\\n                <mat-option value=\\\"mal\\\">MyAnimeList</mat-option>\\r\\n                <mat-option value=\\\"mal_id\\\">MyAnimeList ID</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>검색어를 입력해주세요.</mat-label>\\r\\n              <input matInput #searchBox (keyup.enter)=\\\"search(searchOption.value, searchBox.value, writing)\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"search(searchOption.value, searchBox.value, writing)\\\">\\r\\n              <mat-icon>search</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr><td colspan=\\\"2\\\"><mat-progress-bar *ngIf=\\\"loading\\\" mode=\\\"indeterminate\\\"></mat-progress-bar></td></tr>\\r\\n        <tr>\\r\\n          <th>타입</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <mat-label>타입</mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"writing.type\\\" name=\\\"type\\\">\\r\\n                <mat-option value=\\\"tva\\\">TVA</mat-option>\\r\\n                <mat-option value=\\\"movie\\\">극장판</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제목</th>\\r\\n          <td>\\r\\n            <mat-radio-group [(ngModel)]=\\\"writing.title.rv\\\" name=\\\"rv\\\">\\r\\n              <table class=\\\"table table-borderless\\\">\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"kor\\\">KOR</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"한국어 제목\\\" [(ngModel)]=\\\"writing.title.kor\\\" name=\\\"kor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"eng\\\">ENG</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"알파벳 제목\\\" [(ngModel)]=\\\"writing.title.eng\\\" name=\\\"eng\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <th><mat-radio-button value=\\\"jpn\\\">JPN</mat-radio-button></th>\\r\\n                  <td>\\r\\n                    <mat-form-field class=\\\"form-item\\\">\\r\\n                      <input matInput placeholder=\\\"일어 제목\\\" [(ngModel)]=\\\"writing.title.jpn\\\" name=\\\"jpn\\\">\\r\\n                    </mat-form-field>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </mat-radio-group>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>OHLI</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"OHLI ID\\\" type=\\\"number\\\" [(ngModel)]=\\\"writing.ohli_id\\\" name=\\\"ohli_id\\\">\\r\\n            </mat-form-field>\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"findOhliId(writing)\\\">\\r\\n              <mat-icon>search</mat-icon>\\r\\n            </button>&nbsp;\\r\\n            <button mat-flat-button type=\\\"button\\\" (click)=\\\"removeOhliId(writing)\\\">\\r\\n              <mat-icon>clear</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th rowspan=\\\"2\\\">방영 분기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"연도\\\" type=\\\"number\\\" [(ngModel)]=\\\"writing.premiered.year\\\" name=\\\"year\\\">\\r\\n              <span matSuffix>년</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"분기\\\" type=\\\"number\\\" [(ngModel)]=\\\"writing.premiered.quarter\\\" name=\\\"quarter\\\" max=\\\"4\\\" min=\\\"1\\\">\\r\\n              <span matSuffix>분기</span>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>방영 시기</th>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"방영 시작일\\\" [(ngModel)]=\\\"writing.aired\\\" name=\\\"aired\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>제작사</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"제작사\\\" [(ngModel)]=\\\"studios\\\" name=\\\"studios\\\" rows=\\\"4\\\"></textarea>\\r\\n              <mat-hint>여러 개의 경우, 줄을 나눠서 입력해주세요.</mat-hint>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>메모</th>\\r\\n          <td>\\r\\n            <mat-form-field class=\\\"form-item\\\">\\r\\n              <textarea matInput placeholder=\\\"메모\\\" [(ngModel)]=\\\"writing.memo\\\" name=\\\"memo\\\" rows=\\\"4\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"2\\\" style=\\\"text-align: center;\\\">\\r\\n            <button mat-button type=\\\"submit\\\">\\r\\n              <mat-icon>check_circle_outline</mat-icon>\\r\\n            </button>\\r\\n            <button mat-button type=\\\"button\\\" (click)=\\\"closeEdit()\\\">\\r\\n              <mat-icon>cancel</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </form>\\r\\n  </div>\\r\\n</section>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".mat-tabs:hover {\\r\\n    text-decoration: none;\\r\\n    color: rgb(119, 119, 120);\\r\\n}\\r\\n\\r\\nfooter * {\\r\\n    /* color: rgb(0, 175, 219); */\\r\\n    /* color: white; */\\r\\n    color: rgb(235, 235, 235);\\r\\n}\\r\\n\\r\\n#scroll-button {\\r\\n    background-color: rgb(248, 249, 250);\\r\\n    position: fixed;\\r\\n    width: 40px;\\r\\n    height: 60px;\\r\\n    right: 5px;\\r\\n    bottom: 5px;\\r\\n    text-align: center;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n#scroll-button td:hover {\\r\\n    border-radius: 5px;\\r\\n    background-color: rgb(186, 196, 205);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxvQ0FBb0M7SUFDcEMsZUFBZTtJQUNmLFdBQVc7SUFDWCxZQUFZO0lBQ1osVUFBVTtJQUNWLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLG9DQUFvQztBQUN4QyIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWJzOmhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGNvbG9yOiByZ2IoMTE5LCAxMTksIDEyMCk7XHJcbn1cclxuXHJcbmZvb3RlciAqIHtcclxuICAgIC8qIGNvbG9yOiByZ2IoMCwgMTc1LCAyMTkpOyAqL1xyXG4gICAgLyogY29sb3I6IHdoaXRlOyAqL1xyXG4gICAgY29sb3I6IHJnYigyMzUsIDIzNSwgMjM1KTtcclxufVxyXG5cclxuI3Njcm9sbC1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0OCwgMjQ5LCAyNTApO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICByaWdodDogNXB4O1xyXG4gICAgYm90dG9tOiA1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbiNzY3JvbGwtYnV0dG9uIHRkOmhvdmVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxODYsIDE5NiwgMjA1KTtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  navLinks = [\r\n    { path: '/tva', label: 'TVA' },\r\n    { path: '/movie', label: '극장판' },\r\n    { path: '/watching', label: '시청 중인 목록' },\r\n    { path: '/plan', label: '시청 예정 목록' }\r\n  ];\r\n\r\n  constructor(\r\n    public router: Router\r\n  ) { }\r\n\r\n  scrollUp() {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  scrollDown() {\r\n    let footer = document.getElementById('footer');\r\n    footer.scrollIntoView();\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgFlashMessagesModule } from 'ng-flash-messages';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ContentTypeInterceptor } from 'src/app/interceptors/content.type.interceptor';\r\nimport { SafeHtml } from 'src/app/pipes/safe.html';\r\nimport { SafeUrl } from 'src/app/pipes/safe.url';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatTabsModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatIconModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatDialogModule,\r\n  MatAutocompleteModule,\r\n  MatCheckboxModule,\r\n  MatPaginatorModule,\r\n  MatTooltipModule,\r\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\r\n  MatTooltipDefaultOptions\r\n} from '@angular/material';\r\n\r\nimport { TvaService } from './services/tva.service';\r\nimport { MovieService } from './services/movie.service';\r\nimport { WatchingService } from './services/watching.service';\r\nimport { SearchService } from './services/search.service';\r\nimport { PlanService } from './services/plan.service';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { TvaComponent } from './components/tva/tva.component';\r\nimport { MovieComponent } from './components/movie/movie.component';\r\nimport { WatchingComponent } from './components/watching/watching.component';\r\nimport { PlanComponent } from './components/plan/plan.component';\r\nimport { NoPageComponent } from './components/no-page/no-page.component';\r\n\r\nimport { SearchDialogComponent } from './components/dialogs/search-dialog/search-dialog.component';\r\nimport { OhliDialogComponent } from './components/dialogs/ohli-dialog/ohli-dialog.component';\r\nimport { TextFieldDialogComponent } from './components/dialogs/text-field-dialog/text-field-dialog.component';\r\nimport { StudioDialogComponent } from './components/dialogs/studio-dialog/studio-dialog.component';\r\nimport { EndedDialogComponent } from './components/dialogs/ended-dialog/ended-dialog.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'tva', component: TvaComponent },\r\n  { path: 'tva/:_id/:series/:sequence', component: TvaComponent },\r\n  { path: 'tva/:from/:incompletion_id', component: TvaComponent },\r\n  { path: 'movie', component: MovieComponent },\r\n  { path: 'movie/:_id/:series/:sequence', component: MovieComponent },\r\n  { path: 'movie/:from/:incompletion_id', component: MovieComponent },\r\n  { path: 'watching', component: WatchingComponent },\r\n  { path: 'watching/:_id', component: WatchingComponent },\r\n  { path: 'watching/data-from-plan/:plan_id', component: WatchingComponent },\r\n  { path: 'plan', component: PlanComponent },\r\n  { path: 'plan/:_id', component: PlanComponent },\r\n  { path: 'no-page', component: NoPageComponent },\r\n  { path: '**', component: NoPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SafeHtml,\r\n    SafeUrl,\r\n    HomeComponent,\r\n    TvaComponent,\r\n    MovieComponent,\r\n    WatchingComponent,\r\n    PlanComponent,\r\n    SearchDialogComponent,\r\n    OhliDialogComponent,\r\n    TextFieldDialogComponent,\r\n    NoPageComponent,\r\n    StudioDialogComponent,\r\n    EndedDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(appRoutes, {\r\n      useHash: true,\r\n      onSameUrlNavigation: 'reload',\r\n      scrollPositionRestoration: 'enabled'\r\n    }),\r\n    HttpClientModule,\r\n    NgFlashMessagesModule.forRoot(),\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatPaginatorModule,\r\n    MatTooltipModule\r\n  ],\r\n  entryComponents: [\r\n    SearchDialogComponent,\r\n    OhliDialogComponent,\r\n    TextFieldDialogComponent,\r\n    StudioDialogComponent,\r\n    EndedDialogComponent\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ContentTypeInterceptor, multi: true },\r\n    // { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false} },\r\n    { provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: {position: 'above'} },\r\n    TvaService,\r\n    MovieService,\r\n    WatchingService,\r\n    SearchService,\r\n    PlanService\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","export default \"a {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.btn-link:hover {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.btn-link:focus {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2dzL2VuZGVkLWRpYWxvZy9lbmRlZC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2dzL2VuZGVkLWRpYWxvZy9lbmRlZC1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG5hOmhvdmVyIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmJ0bi1saW5rOmhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmJ0bi1saW5rOmZvY3VzIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\r\nimport { ItemTitle } from 'src/app/models/item';\r\nimport { WatchingVideo, Ohys, WatchingSubtitle } from 'src/app/models/watching';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { SendingOhliProtocol } from 'src/app/models/ohli';\r\nimport { OhliDialogComponent } from '../ohli-dialog/ohli-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-ended-dialog',\r\n  templateUrl: './ended-dialog.component.html',\r\n  styleUrls: ['./ended-dialog.component.css']\r\n})\r\nexport class EndedDialogComponent {\r\n  year: number = undefined;\r\n\r\n  videos: WatchingVideo[] = undefined;\r\n  ohyses: Ohys[] = undefined;\r\n  subtitles: WatchingSubtitle[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EndedDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SendingEndedProtocol,\r\n    private watchingService: WatchingService,\r\n    private searchService: SearchService,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    const title = this.data.title.eng;\r\n    this.searchService.mal(this.data.mal_id).subscribe(malSearched => {\r\n      if ( !malSearched.aired.end ) {\r\n        alert('종영 연도를 찾을 수 없습니다.\\n현재 방영 중인 항목일 수도 있습니다.');\r\n        this.year = new Date().getFullYear();\r\n        this.videos = this.ohyses = [];\r\n      } else {\r\n        this.year = new Date(malSearched.aired.end).getFullYear()\r\n        this.watchingService.getVideos(title).subscribe(videos => this.videos = videos);\r\n        this.watchingService.getOhys(title).subscribe(ohyses => this.ohyses = ohyses);\r\n      }\r\n    });\r\n  }\r\n\r\n  findOhliId() {\r\n    const data: SendingOhliProtocol = {title: this.data.title.kor, ohli_id: null, year: this.year};\r\n    const dialogRef = this.dialog.open(OhliDialogComponent, {data: data});\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      if ( data.ohli_id ) {\r\n        this.subtitles = undefined;\r\n        this.watchingService.getSubtitles(data.ohli_id).subscribe(subtitles => this.subtitles = subtitles);\r\n      }\r\n    });\r\n  }\r\n\r\n  getDate(dateString: string): string {\r\n    let today = new Date();\r\n    let given = new Date(dateString);\r\n    if ( given.getMonth() == today.getMonth() && given.getDate() == today.getDate() )\r\n      return dateString.substring(11);\r\n    else\r\n      return `${given.getMonth()+1}/${given.getDate()}`;\r\n  }\r\n\r\n  getSize(size: number): string {\r\n    const dividedSize = Math.round(size / 1024 / 1024);\r\n    if ( dividedSize >= 1000 ) return (dividedSize / 1024).toFixed(2) + 'GB';\r\n    else return dividedSize + 'MB';\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\ninterface SendingEndedProtocol {\r\n  title: ItemTitle,\r\n  mal_id: number,\r\n  img: string\r\n}\r\n","export default \"img {\\r\\n    max-width: 250px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2dzL29obGktZGlhbG9nL29obGktZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RpYWxvZ3Mvb2hsaS1kaWFsb2cvb2hsaS1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, Inject } from '@angular/core';\r\nimport { Ohli, SendingOhliProtocol } from 'src/app/models/ohli';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\n\r\n@Component({\r\n  selector: 'app-ohli-dialog',\r\n  templateUrl: './ohli-dialog.component.html',\r\n  styleUrls: ['./ohli-dialog.component.css']\r\n})\r\nexport class OhliDialogComponent {\r\n  loading: boolean = true;\r\n  ohlis: Ohli[];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<OhliDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SendingOhliProtocol,\r\n    private watchingService: WatchingService\r\n  ) {\r\n    if ( this.data.year ) {\r\n      this.watchingService.ohli(this.data.title, this.data.year).subscribe(ohlis => {\r\n        this.ohlis = ohlis;\r\n        this.loading = false;\r\n      });\r\n    } else {\r\n      this.watchingService.ohli(this.data.title).subscribe(ohlis => {\r\n        this.ohlis = ohlis;\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectItem(i: number) {\r\n    this.data.ohli_id = this.ohlis[i].id;\r\n    this.onClose();\r\n  }\r\n\r\n}\r\n","export default \"a {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2dzL3NlYXJjaC1kaWFsb2cvc2VhcmNoLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2RpYWxvZ3Mvc2VhcmNoLWRpYWxvZy9zZWFyY2gtZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhIHtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuYTpob3ZlciB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuIl19 */\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SendingSearchedProtocol, Searched } from 'src/app/models/searched';\r\nimport { SearchService } from 'src/app/services/search.service';\r\n\r\n@Component({\r\n  selector: 'app-search-dialog',\r\n  templateUrl: './search-dialog.component.html',\r\n  styleUrls: ['./search-dialog.component.css']\r\n})\r\nexport class SearchDialogComponent {\r\n  loading: boolean = true;\r\n  searches: Searched[];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SearchDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SendingSearchedProtocol,\r\n    private searchService: SearchService\r\n  ) {\r\n    this.searchService.search(this.data.search.text, this.data.search.option).subscribe(searches => {\r\n      this.searches = searches;\r\n      this.loading = false;\r\n    }, err => {\r\n      alert('검색 도중 에러가 발생하였습니다.\\n' + err.name + '\\n' + err.statusText);\r\n    });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectItem(i: number) {\r\n    this.loading = true;\r\n    this.searchService.mal(this.searches[i].mal_id).subscribe(malSearched => {\r\n      this.data.malSearched = malSearched;\r\n      if ( this.searches[i].title_kor ) this.data.malSearched.title.kor = this.searches[i].title_kor;\r\n      this.loading = false;\r\n      this.onClose();\r\n    });\r\n  }\r\n\r\n  getLink(): string {\r\n    if ( this.data.search.option == 'onnada' ) return 'http://onnada.com/search/?t=anime&q=' + encodeURI(this.data.search.text);\r\n    else 'https://myanimelist.net/search/all?q=' + encodeURI(this.data.search.text);\r\n  }\r\n\r\n}\r\n","export default \"a {\\r\\n    color: black;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kaWFsb2dzL3N0dWRpby1kaWFsb2cvc3R1ZGlvLWRpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLDBCQUEwQjtBQUM5QiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhbG9ncy9zdHVkaW8tZGlhbG9nL3N0dWRpby1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG5hOmhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG59XHJcbiJdfQ== */\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ItemTitle } from 'src/app/models/item';\r\nimport { TvaService } from 'src/app/services/tva.service';\r\nimport { MovieService } from 'src/app/services/movie.service';\r\nimport { Tva, TvaSequence } from 'src/app/models/tva';\r\nimport { Movie, MovieSequence } from 'src/app/models/movie';\r\nimport { Completion } from 'src/app/models/completion';\r\n\r\n@Component({\r\n  selector: 'app-studio-dialog',\r\n  templateUrl: './studio-dialog.component.html',\r\n  styleUrls: ['./studio-dialog.component.css']\r\n})\r\nexport class StudioDialogComponent {\r\n  private static source: {\r\n    tvas: Tva[],\r\n    movies: Movie[]\r\n  } = undefined;\r\n  tvas: StudioDialogItem[] = [];\r\n  movies: StudioDialogItem[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<StudioDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string,\r\n    private tvaService: TvaService,\r\n    private movieService: MovieService\r\n  ) {\r\n    if ( !StudioDialogComponent.source ) {\r\n      StudioDialogComponent.source = {tvas: undefined, movies: undefined};\r\n      this.tvaService.getTvas().subscribe(tvas => this.itemsToArray(StudioDialogComponent.source.tvas = tvas, this.tvas, true));\r\n      this.movieService.getMovies().subscribe(movies => this.itemsToArray(StudioDialogComponent.source.movies = movies, this.movies));\r\n    } else {\r\n      this.itemsToArray(StudioDialogComponent.source.tvas, this.tvas, true);\r\n      this.itemsToArray(StudioDialogComponent.source.movies, this.movies);\r\n      this.tvaService.getTvas().subscribe(tvas => StudioDialogComponent.source.tvas = tvas);\r\n      this.movieService.getMovies().subscribe(movies => StudioDialogComponent.source.movies = movies);\r\n    }\r\n  }\r\n\r\n  private itemsToArray(items: Completion[], arr: StudioDialogItem[], isTva?: boolean) {\r\n    for (let item of items) {\r\n      for (let [i, series] of item.series.entries()) {\r\n        for (let [j, sequence] of series.sequences.entries()) {\r\n          if ( sequence.studios.includes(this.data) ) {\r\n            arr.push({\r\n              title: sequence.title,\r\n              _id: item._id,\r\n              series: i,\r\n              sequence: j,\r\n              date: isTva ? (<TvaSequence> sequence).aired.start : (<MovieSequence> sequence).aired\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    arr.sort((a, b) => { return new Date(a.date).getTime() - new Date(b.date).getTime() });\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getLink(url: string, item: StudioDialogItem): string {\r\n    // if ( item.moreParams ) link += ((arr: any[]): string => { let result = ''; for (let each of arr) result += `/${each}`; return result; })(item.moreParams);\r\n    return `/${url}/${item._id}/${item.series}/${item.sequence}`;\r\n  }\r\n\r\n  getFormattedDate(date: string): string {\r\n    let d = new Date(date);\r\n    let f = (n: number): string => { if ( n == 0 ) n = 1; return n < 10 ? '0' + n : n.toString() };\r\n    return `'${d.getFullYear().toString().substr(2, 2)}.${f(d.getMonth())}.${f(d.getDate())}`;\r\n  }\r\n\r\n  yearChanged(i: number): boolean {\r\n    if ( i == 0 ) return false;\r\n    let before = new Date(this.tvas[i-1].date);\r\n    let after = new Date(this.tvas[i].date);\r\n    return before.getFullYear() != after.getFullYear();\r\n  }\r\n\r\n}\r\n\r\ninterface StudioDialogItem {\r\n  _id: string,\r\n  title: ItemTitle,\r\n  series: number,\r\n  sequence: number,\r\n  date: string\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlhbG9ncy90ZXh0LWZpZWxkLWRpYWxvZy90ZXh0LWZpZWxkLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-text-field-dialog',\r\n  templateUrl: './text-field-dialog.component.html',\r\n  styleUrls: ['./text-field-dialog.component.css']\r\n})\r\nexport class TextFieldDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TextFieldDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SendingTextProtocol\r\n  ) { }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\nexport interface SendingTextProtocol {\r\n  title: string,\r\n  explain: string,\r\n  text: string,\r\n  placeholder: string\r\n}\r\n","export default \".carousel-item {\\r\\n    height: 42rem;\\r\\n}\\r\\n\\r\\nli {\\r\\n    margin: .75rem;\\r\\n}\\r\\n\\r\\n@media (min-width: 40em) {\\r\\n    .carousel-caption p {\\r\\n        margin-bottom: 1.25rem;\\r\\n        font-size: 1.25rem;\\r\\n        line-height: 1.4;\\r\\n    }\\r\\n}\\r\\n\\r\\n.carousel-button:hover {\\r\\n    color: black;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.searched-link {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.searched-link:hover {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0k7UUFDSSxzQkFBc0I7UUFDdEIsa0JBQWtCO1FBQ2xCLGdCQUFnQjtJQUNwQjtBQUNKOztBQUVBO0lBQ0ksWUFBWTtJQUNaLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJvdXNlbC1pdGVtIHtcclxuICAgIGhlaWdodDogNDJyZW07XHJcbn1cclxuXHJcbmxpIHtcclxuICAgIG1hcmdpbjogLjc1cmVtO1xyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNDBlbSkge1xyXG4gICAgLmNhcm91c2VsLWNhcHRpb24gcCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgIH1cclxufVxyXG5cclxuLmNhcm91c2VsLWJ1dHRvbjpob3ZlciB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5zZWFyY2hlZC1saW5rIHtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnNlYXJjaGVkLWxpbms6aG92ZXIge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcbiJdfQ== */\"","import { PageEvent } from \"@angular/material\";\r\nimport { TvaSequence, Tva } from 'src/app/models/tva';\r\nimport { MovieSequence, Movie } from 'src/app/models/movie';\r\nimport { Watching } from 'src/app/models/watching';\r\nimport { Plan } from 'src/app/models/plan';\r\nimport { Sequence } from 'src/app/models/completion';\r\n\r\nexport interface Carousel {\r\n    type: string,\r\n    title: string,\r\n    content: string,\r\n    link: string\r\n}\r\n\r\nexport interface PageEvents {\r\n    tva: PageEvent,\r\n    movie: PageEvent,\r\n    watching: PageEvent,\r\n    plan: PageEvent\r\n}\r\n\r\ninterface Detail {\r\n    _id: string,\r\n    series: number,\r\n    sequence: number,\r\n    seriesTitle: string\r\n}\r\n\r\nexport interface SearchedSequence extends Sequence, Detail {}\r\ninterface SearchedTvaSequence extends TvaSequence, Detail {}\r\ninterface SearchedMovieSequence extends MovieSequence, Detail {}\r\n\r\nclass Shapes {\r\n    tvas: any[];\r\n    movies: any[];\r\n    watchings: Watching[];\r\n    plans: Plan[];\r\n\r\n    constructor() {\r\n        this.tvas = [];\r\n        this.movies = [];\r\n        this.watchings = [];\r\n        this.plans = [];\r\n    }\r\n}\r\n\r\nexport class Items extends Shapes {\r\n    tvas: Tva[];\r\n    movies: Movie[];\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n\r\nexport class SearchedItems extends Shapes {\r\n    tvas: SearchedTvaSequence[];\r\n    movies: SearchedMovieSequence[];\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TvaService } from 'src/app/services/tva.service';\r\nimport { MovieService } from 'src/app/services/movie.service';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\nimport { PlanService } from 'src/app/services/plan.service';\r\nimport { Completion, Sequence } from 'src/app/models/completion';\r\nimport { Incompletion } from 'src/app/models/incompletion';\r\nimport { PageEvent, MatDialog } from '@angular/material';\r\nimport { Carousel, Items, SearchedItems, PageEvents, SearchedSequence } from './home.component.model';\r\nimport { TitleService } from 'src/app/services/title.service';\r\nimport { StudioDialogComponent } from '../dialogs/studio-dialog/studio-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  carousel: Carousel[] = [];\r\n  backgrounds: number[] = [];\r\n\r\n  private readonly titleTypes = [ 'eng', 'kor', 'jpn' ];\r\n  allItems: Items = new Items();\r\n  searchedItems: SearchedItems = new SearchedItems();\r\n  searchedText: string = undefined;\r\n\r\n  pageEvents: PageEvents;\r\n  readonly pageSizeOptions = [ 5, 10, 25, 100 ];\r\n  readonly pageSize = 10;\r\n\r\n  constructor(\r\n    private tvaService: TvaService,\r\n    private movieService: MovieService,\r\n    private watchingService: WatchingService,\r\n    private planService: PlanService,\r\n    private titleService: TitleService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.titleService.setDefaultTitle();\r\n    this.tvaService.getTvas().subscribe(tvas => {\r\n      this.allItems.tvas = tvas;\r\n      let tva = tvas[ this.getRandomNumber(tvas.length) ];\r\n      let i: number = this.getRandomNumber(tva.series.length);\r\n      let j: number = this.getRandomNumber(tva.series[i].sequences.length);\r\n      let sequence = tva.series[i].sequences[j];\r\n      this.carousel.push({\r\n        type: '[ TVA ]',\r\n        title: sequence.title[sequence.title.rv],\r\n        content: `${sequence.premiered.year}년 ${sequence.premiered.quarter}분기 방영`,\r\n        link: `/tva/${tva._id}/${i}/${j}`\r\n      });\r\n    });\r\n    this.movieService.getMovies().subscribe(movies => {\r\n      this.allItems.movies = movies;\r\n      let movie = movies[ this.getRandomNumber(movies.length) ];\r\n      let i: number = this.getRandomNumber(movie.series.length);\r\n      let j: number = this.getRandomNumber(movie.series[i].sequences.length);\r\n      let sequence = movie.series[i].sequences[j];\r\n      let date = new Date(sequence.aired);\r\n      this.carousel.push({\r\n        type: '[ 극장판 ]',\r\n        title: sequence.title[sequence.title.rv],\r\n        content: `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일 개봉`,\r\n        link: `/movie/${movie._id}/${i}/${j}`\r\n      });\r\n    });\r\n    this.watchingService.getWatchings().subscribe(watchings => {\r\n      this.allItems.watchings = watchings;\r\n      let watching = watchings[ this.getRandomNumber(watchings.length) ];\r\n      this.carousel.push({\r\n        type: `[ ${watching.type == 'tva' ? 'TVA' : '극장판'} - 시청 중 ] `,\r\n        title: watching.title[watching.title.rv],\r\n        content: `${watching.premiered.year}년 ${watching.premiered.quarter}분기 방영`,\r\n        link: `/watching/${watching._id}`\r\n      });\r\n    });\r\n    this.planService.getPlans().subscribe(plans => {\r\n      this.allItems.plans = plans;\r\n      let plan = plans[ this.getRandomNumber(plans.length) ];\r\n      let date = new Date(plan.aired);\r\n      this.carousel.push({\r\n        type: `[ ${plan.type == 'tva' ? 'TVA' : '극장판'} - 시청 예정 ] `,\r\n        title: plan.title[plan.title.rv],\r\n        content: (plan.aired != null && plan.aired != '') ? `${date.getFullYear()}년 ${Math.floor((date.getMonth() + 4) / 3)}분기 방영` : '기타 정보 없음',\r\n        link: `/plan/${plan._id}`\r\n      });\r\n    });\r\n\r\n    let pageEvent = new PageEvent();\r\n    pageEvent.pageIndex = 0;\r\n    pageEvent.pageSize = 10;\r\n    this.pageEvents = {\r\n      tva: pageEvent,\r\n      movie: pageEvent,\r\n      watching: pageEvent,\r\n      plan: pageEvent\r\n    };\r\n  }\r\n\r\n  private getRandomNumber(len: number): number {\r\n    return Math.floor(Math.random() * len);\r\n  }\r\n\r\n  private removeSpace(text: string): string {\r\n    return text.replace(/\\s/gi, '');\r\n  }\r\n\r\n  private matchWithNoSpace(big: string, small: string): boolean {\r\n    return this.removeSpace(big.toLowerCase()).includes(small);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.backgrounds = [];\r\n    const bgCounts = 10;\r\n    for (let i=0; i<4; i++) {\r\n      let idx: number = this.getRandomNumber(bgCounts);\r\n      let flag: boolean = i != 0;\r\n      while ( flag ) {\r\n        for (let j=0; j<this.backgrounds.length; j++) {\r\n          if ( idx == this.backgrounds[j] ) {\r\n            flag = true;\r\n            idx = this.getRandomNumber(bgCounts);\r\n            break;\r\n          } else {\r\n            flag = false;\r\n          }\r\n        }\r\n      }\r\n      this.backgrounds[i] = idx;\r\n    }\r\n  }\r\n\r\n  private searchCompletion(text: string, what: string) {\r\n    const arr: Completion[] = this.allItems[what];\r\n    arr.some(c => {\r\n      if ( this.matchWithNoSpace(c.category, text) ) {\r\n        for (let [i, series] of c.series.entries()) {\r\n          for (let [j, sequence] of series.sequences.entries()) {\r\n            let searchedSequence: SearchedSequence = <SearchedSequence> sequence;\r\n            searchedSequence._id = c._id;\r\n            searchedSequence.series = i;\r\n            searchedSequence.sequence = j;\r\n            searchedSequence.seriesTitle = series.title;\r\n            (<Sequence[]> this.searchedItems[what]).push(searchedSequence);\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n      for (let [i, series] of c.series.entries()) {\r\n        if ( this.matchWithNoSpace(series.title, text) ) {\r\n          for (let [j, sequence] of series.sequences.entries()) {\r\n            let searchedSequence: SearchedSequence = <SearchedSequence> sequence;\r\n            searchedSequence._id = c._id;\r\n            searchedSequence.series = i;\r\n            searchedSequence.sequence = j;\r\n            searchedSequence.seriesTitle = series.title;\r\n            (<SearchedSequence[]> this.searchedItems[what]).push(searchedSequence);\r\n          }\r\n          return false;\r\n        } else {\r\n          for (let [j, sequence] of series.sequences.entries()) {\r\n            for (let titleType of this.titleTypes) {\r\n              if ( this.matchWithNoSpace(sequence.title[titleType], text) ) {\r\n                let searchedSequence: SearchedSequence = <SearchedSequence> sequence;\r\n                searchedSequence._id = c._id;\r\n                searchedSequence.series = i;\r\n                searchedSequence.sequence = j;\r\n                searchedSequence.seriesTitle = series.title;\r\n                (<SearchedSequence[]> this.searchedItems[what]).push(searchedSequence);\r\n                return false;\r\n              }\r\n            }\r\n            for (let studio of sequence.studios) {\r\n              if ( this.matchWithNoSpace(studio, text) ) {\r\n                let searchedSequence: SearchedSequence = <SearchedSequence> sequence;\r\n                searchedSequence._id = c._id;\r\n                searchedSequence.series = i;\r\n                searchedSequence.sequence = j;\r\n                searchedSequence.seriesTitle = series.title;\r\n                (<SearchedSequence[]> this.searchedItems[what]).push(searchedSequence);\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private searchIncompletion(text: string, what: string) {\r\n    const arr: Incompletion[] = this.allItems[what];\r\n    arr.some(ic => {\r\n      for (let titleType of this.titleTypes) {\r\n        if ( this.matchWithNoSpace(ic.title[titleType], text) ) {\r\n          (<Incompletion[]> this.searchedItems[what]).push(ic);\r\n          return false;\r\n        }\r\n      }\r\n      for (let studio of ic.studios) {\r\n        if ( this.matchWithNoSpace(studio, text) ) {\r\n          (<Incompletion[]> this.searchedItems[what]).push(ic);\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  search(text: string) {\r\n    text = this.removeSpace(text).toLowerCase();\r\n    this.searchedItems = new SearchedItems();\r\n    this.searchedText = text;\r\n    if ( text == '' ) return;\r\n    this.searchCompletion(text, 'tvas');\r\n    this.searchCompletion(text, 'movies');\r\n    this.searchIncompletion(text, 'watchings');\r\n    this.searchIncompletion(text, 'plans');\r\n  }\r\n\r\n  allElementsLength(completion: Completion): number {\r\n    let count = 0;\r\n    for (let i=0; i<completion.series.length; i++) {\r\n      count += completion.series[i].sequences.length;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  getQuarterFromAiredDate(aired: string): string {\r\n    if ( !aired || aired == '' ) return '-';\r\n    let date = new Date(aired);\r\n    let year = date.getFullYear().toString().substring(2);\r\n    let qtr = Math.floor((date.getMonth() + 4) / 3);\r\n    return `'${year} - ${qtr}`;\r\n  }\r\n\r\n  findByStudio(studio: string) {\r\n    this.dialog.open(StudioDialogComponent, {data: studio});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbW92aWUvbW92aWUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MovieService } from 'src/app/services/movie.service';\r\nimport { TvaService } from 'src/app/services/tva.service';\r\nimport { Movie, MovieSequence } from 'src/app/models/movie';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { cloneObject, isOK, notOK } from 'src/app/models/item';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SendingSearchedProtocol, MalSearched, searchedProtocolFactory } from 'src/app/models/searched';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\nimport { Tva } from 'src/app/models/tva';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\nimport { PlanService } from 'src/app/services/plan.service';\r\nimport { HeaderAlign } from 'src/app/models/headerAlign';\r\nimport { SendingTextProtocol, TextFieldDialogComponent } from '../dialogs/text-field-dialog/text-field-dialog.component';\r\nimport { TitleService } from 'src/app/services/title.service';\r\nimport { StudioDialogComponent } from '../dialogs/studio-dialog/studio-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-movie',\r\n  templateUrl: './movie.component.html',\r\n  styleUrls: ['./movie.component.css']\r\n})\r\nexport class MovieComponent extends HeaderAlign<Movie> implements OnInit {\r\n  movies: Movie[] = null;\r\n  movieMap: Map<string, Movie>;\r\n  modifying: {\r\n    studios: string,\r\n    series: number,\r\n    sequence: number\r\n  } = null;\r\n  loading: boolean = false;\r\n\r\n  writing: boolean = false;\r\n  writingMovie: MovieSequence;\r\n  seriesMemo: string;\r\n  tvas: Tva[] = null;\r\n  linked: {\r\n    idx: number,\r\n    series: number\r\n  } = {\r\n    idx: 0,\r\n    series: 0\r\n  };\r\n\r\n  from: string = undefined;\r\n  incompletion_id: string = undefined;\r\n\r\n  constructor(\r\n    private movieService: MovieService,\r\n    private tvaService: TvaService,\r\n    private searchService: SearchService,\r\n    private watchingService: WatchingService,\r\n    private planService: PlanService,\r\n    private titleService: TitleService,\r\n    private route: ActivatedRoute,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    super([2], [5]);\r\n    this.titleService.setTitle('극장판');\r\n    this.movieService.getMovies().subscribe(movies => {\r\n      this.movies = movies;\r\n      super.setItems([this.movies]);\r\n      this.movieMap = new Map<string, Movie>();\r\n      movies.map(v => this.movieMap.set(v._id, v));\r\n      this.movies.sort((a: Movie, b: Movie) => { return a.category.localeCompare(b.category) });\r\n      setTimeout(() => this.scrollToElement(), 500);\r\n    });\r\n  }\r\n\r\n  protected getAlignment(standard: number) {\r\n    switch(standard) {\r\n      case 0: return (a: Movie, b: Movie) => { return a.category.localeCompare(b.category) * this.alignments[0][standard] }\r\n      case 1: return (a: Movie, b: Movie) => { return a.series[0].title.localeCompare(b.series[0].title) * this.alignments[0][standard] }\r\n      case 2: return (a: Movie, b: Movie) => { return a.series[0].sequences[0].title[a.series[0].sequences[0].title.rv].localeCompare(b.series[0].sequences[0].title[b.series[0].sequences[0].title.rv]) * this.alignments[0][standard] }\r\n      case 3: return (a: Movie, b: Movie) => { return a.series[0].sequences[0].studios[0].localeCompare(b.series[0].sequences[0].studios[0]) * this.alignments[0][standard] }\r\n      case 4: return (a: Movie, b: Movie) => { return (new Date(a.series[0].sequences[0].aired).getTime() - new Date(b.series[0].sequences[0].aired).getTime()) * this.alignments[0][standard] }\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  private scrollToElement() {\r\n    if ( this.route.snapshot.paramMap.get('_id') ) {\r\n      const _id = this.route.snapshot.paramMap.get('_id');\r\n      this.clickMovieWithId(_id, +this.route.snapshot.paramMap.get('series'), +this.route.snapshot.paramMap.get('sequence'));\r\n      let element: HTMLElement = document.getElementById(_id);\r\n      try {\r\n        element.scrollIntoView();\r\n      } catch(e) {\r\n        alert('알 수 없는 에러가 발생하였습니다.\\n' + e);\r\n      }\r\n    } else if ( this.route.snapshot.paramMap.get('incompletion_id') ) {\r\n      this.writeMovie();\r\n      this.from = this.route.snapshot.paramMap.get('from');\r\n      this.incompletion_id = this.route.snapshot.paramMap.get('incompletion_id');\r\n      (this.from == 'data-from-watching' ? this.watchingService : this.planService).get(this.incompletion_id).subscribe(result => {\r\n        if ( !result._id ) {\r\n          alert('알 수 없는 에러가 발생하였습니다.\\n' + result);\r\n          return;\r\n        }\r\n        if ( result.mal_id ) this.searchMovie('mal_id', result.mal_id.toString());\r\n        else {\r\n          this.writingMovie.aired = result.aired;\r\n          this.writingMovie.studios = result.studios;\r\n        }\r\n        this.writingMovie.title = result.title;\r\n        this.writingMovie.memo = result.memo\r\n        let element: HTMLElement = document.getElementById('writing-area');\r\n        try {\r\n          element.scrollIntoView();\r\n        } catch(e) {\r\n          alert('알 수 없는 에러가 발생하였습니다.\\n' + e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  allElementsLength(m: number): number {\r\n    let count = 0;\r\n    for (let i=0; i<this.movies[m].series.length; i++) {\r\n      count += this.movies[m].series[i].sequences.length;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickMovie(m: number, series: number, sequence: number) {\r\n    if ( this.movies[m].modifying ) return;\r\n    let opened = {series: series, sequence: sequence, linked: null};\r\n    if ( this.movies[m].opened ) {\r\n      if ( this.movies[m].opened.series != series || this.movies[m].opened.sequence != sequence ) {\r\n        opened.linked = this.movies[m].opened.linked;\r\n        this.movies[m].opened = opened;\r\n      } else this.movies[m].opened = null;\r\n      return;\r\n    }\r\n    this.movies[m].opened = opened;\r\n    this.setLinkedTva(m, this.movies[m].category_tva, this.movies[m].series[series].key);\r\n  }\r\n\r\n  clickMovieWithId(_id: string, series: number, sequence: number) {\r\n    if ( this.movieMap.get(_id).modifying ) return;\r\n    let opened = {series: series, sequence: sequence, linked: null};\r\n    if ( this.movieMap.get(_id).opened ) {\r\n      if ( this.movieMap.get(_id).opened.series != series || this.movieMap.get(_id).opened.sequence != sequence ) {\r\n        opened.linked = this.movieMap.get(_id).opened.linked;\r\n        this.movieMap.get(_id).opened = opened;\r\n      } else this.movieMap.get(_id).opened = null;\r\n      return;\r\n    }\r\n    this.movieMap.get(_id).opened = opened;\r\n    this.setLinkedTvaWithId(_id, this.movieMap.get(_id).category_tva, this.movieMap.get(_id).series[series].key);\r\n  }\r\n\r\n  private setLinkedTva(m: number, tva_id: string, key: string) {\r\n    if ( this.movies[m].opened.linked ) return;\r\n    this.tvaService.getTva(tva_id).subscribe(tva => {\r\n      for (let i=0; i<tva.series.length; i++) {\r\n        if ( tva.series[i].key == key ) {\r\n          this.movies[m].opened.linked = {\r\n            title: tva.series[i].title,\r\n            _id: tva._id,\r\n            series: i\r\n          };\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private setLinkedTvaWithId(_id: string, tva_id: string, key: string) {\r\n    if ( this.movieMap.get(_id).opened.linked ) return;\r\n    this.tvaService.getTva(tva_id).subscribe(tva => {\r\n      for (let i=0; i<tva.series.length; i++) {\r\n        if ( tva.series[i].key == key ) {\r\n          this.movieMap.get(_id).opened.linked = {\r\n            title: tva.series[i].title,\r\n            _id: tva._id,\r\n            series: i\r\n          };\r\n          return;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  editCategory(m: number) {\r\n    const data: SendingTextProtocol = {\r\n      title: '카테고리명 수정',\r\n      explain: '수정할 카테고리명을 입력해주세요.',\r\n      placeholder: '카테고리명',\r\n      text: this.movies[m].category\r\n    }\r\n    const dialogRef = this.dialog.open(TextFieldDialogComponent, {data: data});\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      if ( !data.text || data.text == '' ) return;\r\n      this.movies[m].category = data.text;\r\n      this.movieService.modifyMovie(this.movies[m]).subscribe(result => {\r\n        if ( !result._id ) alert('수정 실패');\r\n      });\r\n    });\r\n  }\r\n\r\n  private setStudio(studios: string[]) {\r\n    this.modifying.studios = '';\r\n    for (let studio of studios) this.modifying.studios += studio + '\\n';\r\n  }\r\n\r\n  modifyMovie(m: number, series: number, sequence: number) {\r\n    this.movies[m].opened = null;\r\n    for (let tva of this.movies) tva.modifying = null;\r\n    this.movies[m].modifying = cloneObject(this.movies[m].series[series].sequences[sequence]);\r\n    this.modifying = {series: series, sequence: sequence, studios: undefined};\r\n    this.setStudio(this.movies[m].modifying.studios);\r\n\r\n    this.tvaService.getTvas().subscribe(tvas => {\r\n      this.tvas = tvas;\r\n      this.tvas.sort((a: Tva, b: Tva) => {\r\n        return a.category.localeCompare(b.category);\r\n      });\r\n      for (let i=0; i<this.tvas.length; i++) {\r\n        if ( this.movies[m].category_tva == this.tvas[i]._id ) {\r\n          for (let j=0; j<this.tvas[i].series.length; j++) {\r\n            if ( this.movies[m].series[series].key == this.tvas[i].series[j].key ) {\r\n              this.linked = {\r\n                idx: i,\r\n                series: j\r\n              };\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelModify(m: number) {\r\n    this.movies[m].modifying = null;\r\n    this.movies[m].opened = null;\r\n    this.clickMovie(m, this.modifying.series, this.modifying.sequence);\r\n  }\r\n\r\n  cancelWrite() {\r\n    this.cancelEditing();\r\n  }\r\n\r\n  private cancelEditing() {\r\n    this.writing = false;\r\n    this.tvas = null;\r\n    this.linked = {\r\n      idx: 0,\r\n      series: 0\r\n    };\r\n  }\r\n\r\n  onModifySubmit(m: number, series: number, sequence: number) {\r\n    if ( !confirm('저장하시겠습니까?') ) return;\r\n\r\n    // validating input values\r\n    if ( !isOK(this.movies[m].modifying, ['memo']) ) return notOK();\r\n    if ( !isOK(this.modifying) || !isOK(this.linked) ) return notOK();\r\n\r\n    // change series with input title\r\n    this.movies[m].series[series].sequences.splice(sequence, 1);\r\n    let flag: boolean = false;\r\n    outer: for (let i=0; i<this.movies[m].series.length; i++) {\r\n      if ( this.movies[m].series[i].key == this.tvas[this.linked.idx].series[this.linked.series].key ) {\r\n        flag = true;\r\n        this.movies[m].modifying.studios = this.modifying.studios.trim().split('\\n');\r\n        this.movies[m].series[i].sequences.push(this.movies[m].modifying);\r\n        this.movies[m].series[i].sequences.sort((a, b) => { return a.order - b.order; });\r\n        series = i;\r\n        for (let j=0; j<this.movies[m].series[i].sequences.length; j++) {\r\n          if ( this.movies[m].series[i].sequences[j].order == this.movies[m].modifying.order ) {\r\n            sequence = j;\r\n            break outer;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    // create a new series with input title\r\n    if ( !flag ) {\r\n      this.movies[m].series.push({\r\n        title: this.tvas[this.linked.idx].series[this.linked.series].title,\r\n        key: this.tvas[this.linked.idx].series[this.linked.series].key,\r\n        memo: '',\r\n        sequences: [ this.movies[m].modifying ]\r\n      });\r\n      series = this.movies[m].series.length - 1;\r\n      sequence = 0;\r\n      this.movies[m].series.sort((a, b) => { return new Date(a.sequences[0].aired).getTime() - new Date(b.sequences[0].aired).getTime() });\r\n    }\r\n\r\n    // remove empty series (which has an empty sequence)\r\n    for (let i=0; i<this.movies[m].series.length; i++) {\r\n      if ( this.movies[m].series[i].sequences.length == 0 ) {\r\n        this.movies[m].series.splice(i, 1);\r\n        if ( series >= i ) series--;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.movieService.modifyMovie(this.movies[m]).subscribe(result => {\r\n      if ( result._id ) {\r\n        this.movies[m].modifying = null;\r\n        this.clickMovie(m, series, sequence);\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['수정되었습니다.'],\r\n          type: 'success',\r\n          timeout: 2000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  seriesSelect() {\r\n    if ( !this.tvas[this.linked.idx].category_movie ) return;\r\n    for (let movie of this.movies) {\r\n      if ( this.tvas[this.linked.idx].category_movie == movie._id ) {\r\n        for (let movieSeries of movie.series) {\r\n          if ( this.tvas[this.linked.idx].series[this.linked.series].key == movieSeries.key ) {\r\n            this.seriesMemo = movieSeries.memo;\r\n            // this.writingMovie.order = movieSeries.sequences.length + 1;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // this.writingMovie.order = 1;\r\n  }\r\n\r\n  private searchedToSequence(sequence: MovieSequence, malSearched: MalSearched) {\r\n    if ( malSearched.title.kor ) sequence.title.kor = malSearched.title.kor;\r\n    sequence.title.eng = malSearched.title.eng;\r\n    sequence.title.jpn = malSearched.title.jpn;\r\n    sequence.aired = malSearched.aired.start;\r\n    sequence.studios = malSearched.studios;\r\n    sequence.mal_id = malSearched.mal_id;\r\n    sequence.img = malSearched.img;\r\n    this.setStudio(sequence.studios);\r\n  }\r\n\r\n  searchMovie(option: string, text: string, m?: number) {\r\n    if ( !option ) {\r\n      alert('옵션을 선택해주세요.');\r\n      return;\r\n    }\r\n    if ( !text || text == '' ) {\r\n      alert('비어있습니다.');\r\n      return;\r\n    }\r\n\r\n    let movie: MovieSequence = m ? this.movies[m].modifying : this.writingMovie;\r\n    if ( option == 'mal_id' ) {\r\n      let id = parseInt(text);\r\n      if ( isNaN(id) ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['숫자를 입력해야 합니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.searchService.mal(id).subscribe(result => {\r\n        this.loading = false;\r\n        if ( result.mal_id ) this.searchedToSequence(movie, result);\r\n        else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['존재하지 않는 ID이거나 오류가 발생했습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const data: SendingSearchedProtocol = searchedProtocolFactory(text, option);\r\n      const dialogRef = this.dialog.open(SearchDialogComponent, {data: data});\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        if ( data.malSearched ) {\r\n          this.searchedToSequence(movie, data.malSearched);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  writeMovie() {\r\n    this.seriesMemo = '';\r\n    this.writing = true;\r\n    this.writingMovie = {\r\n      title: {kor: '', eng: '', jpn: '', rv: 'kor'},\r\n      aired: '',\r\n      order: 1,\r\n      studios: [],\r\n      memo: '',\r\n      mal_id: 0,\r\n      img: ''\r\n    };\r\n    this.modifying = {\r\n      studios: '',\r\n      series: 0,\r\n      sequence: 0\r\n    };\r\n\r\n    this.tvaService.getTvas().subscribe(tvas => {\r\n      this.tvas = tvas;\r\n      this.tvas.sort((a: Tva, b: Tva) => {\r\n        return a.category.localeCompare(b.category);\r\n      });\r\n    });\r\n  }\r\n\r\n  onWriteSubmit() {\r\n    // validating input values\r\n    if ( !isOK(this.writingMovie, ['memo']) ) return notOK();\r\n    if ( !isOK(this.modifying) || !isOK(this.linked) ) return notOK();\r\n\r\n    let category: number = -1;\r\n    let series: number = -1;\r\n    for (let i=0; i<this.movies.length; i++) {\r\n      if ( this.movies[i].category == this.tvas[this.linked.idx].category ) {\r\n        category = i;\r\n        for (let j=0; j<this.movies[i].series.length; j++) {\r\n          if ( this.movies[i].series[j].key == this.tvas[this.linked.idx].series[this.linked.series].key ) {\r\n            series = j;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    let newMovie: Movie;\r\n    this.writingMovie.studios = this.modifying.studios.trim().split('\\n');\r\n    if ( category != -1 ) {\r\n      newMovie = this.movies[category];\r\n      if ( series != -1 ) { // add to an existing series\r\n        newMovie.series[series].sequences.push(this.writingMovie);\r\n        newMovie.series[series].sequences.sort((a, b) => { return a.order - b.order });\r\n      } else {  // add new series\r\n        newMovie.series.push({\r\n          title: this.tvas[this.linked.idx].series[this.linked.series].title,\r\n          key: this.tvas[this.linked.idx].series[this.linked.series].key,\r\n          memo: this.seriesMemo,\r\n          sequences: [ this.writingMovie ]\r\n        });\r\n        newMovie.series.sort((a, b) => {\r\n          return new Date(a.sequences[0].aired).getTime() - new Date(b.sequences[0].aired).getTime();\r\n        });\r\n      }\r\n      this.movieService.modifyMovie(newMovie).subscribe(result => {\r\n        if ( result._id ) {\r\n          alert('추가되었습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['추가되었습니다.'],\r\n            type: 'success',\r\n            timeout: 2000\r\n          });\r\n          this.cancelEditing();\r\n          this.movieMap.set(result._id, result);\r\n          this.clickMovieWithId(result._id, series, result.series[series].sequences.length-1);\r\n          let el = document.getElementById(result._id);\r\n          try { el.scrollIntoView() } catch(e) {}\r\n          if ( this.incompletion_id ) {\r\n            (this.from == 'data-from-watching' ? this.watchingService : this.planService).remove(this.incompletion_id).subscribe(err => {\r\n              if ( err ) alert('원래의 목록에서 삭제하는 도중 오류가 발생하였습니다.');\r\n              else this.incompletion_id = undefined;\r\n            });\r\n          }\r\n        } else {\r\n          alert('오류가 발생하였습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['오류가 발생하였습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n        return;\r\n      });\r\n    } else {\r\n      newMovie = {\r\n        category: this.tvas[this.linked.idx].category,\r\n        category_tva: this.tvas[this.linked.idx]._id,\r\n        series: [{\r\n          title: this.tvas[this.linked.idx].series[this.linked.series].title,\r\n          key: this.tvas[this.linked.idx].series[this.linked.series].key,\r\n          memo: this.seriesMemo,\r\n          sequences: [ this.writingMovie ]\r\n        }]\r\n      };\r\n      this.movieService.addMovie(newMovie).subscribe(result => {\r\n        if ( result._id ) {\r\n          alert('추가되었습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['추가되었습니다.'],\r\n            type: 'success',\r\n            timeout: 2000\r\n          });\r\n          this.cancelEditing();\r\n          this.movies.push(result);\r\n          // this.movies.sort((a, b) => { return a.category.localeCompare(b.category) });\r\n          this.align();\r\n          this.movieMap.set(result._id, result);\r\n          this.clickMovieWithId(result._id, 0, 0);\r\n          setTimeout(() => {\r\n            try { document.getElementById(result._id).scrollIntoView() }\r\n            catch(e) {}\r\n          }, 500);\r\n          if ( this.incompletion_id ) {\r\n            (this.from == 'data-from-watching' ? this.watchingService : this.planService).remove(this.incompletion_id).subscribe(err => {\r\n              if ( err ) alert('원래의 목록에서 삭제하는 도중 오류가 발생하였습니다.');\r\n              else this.incompletion_id = undefined;\r\n            });\r\n          }\r\n        } else {\r\n          alert('오류가 발생하였습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['오류가 발생하였습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n        return;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  removeMovie(m: number, series: number, sequence: number) {\r\n    if ( !confirm('삭제하시겠습니까?') ) return;\r\n    this.movieService.removeMovie(this.movies[m]._id, series, sequence).subscribe(err => {\r\n      if ( err ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.movies.splice(m, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAll() {\r\n    for (let i=0; i<this.movies.length; i++) {\r\n      this.movies[i].opened = null;\r\n      this.clickMovie(i, 0, 0);\r\n    }\r\n  }\r\n\r\n  closeAll() {\r\n    for (let movie of this.movies) {\r\n      movie.opened = null;\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    if ( this.movies ) {\r\n      let count = 0;\r\n      for (let movie of this.movies) {\r\n        for (let series of movie.series) {\r\n          count += series.sequences.length;\r\n        }\r\n      }\r\n      return count;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  findByStudio(studio: string) {\r\n    this.dialog.open(StudioDialogComponent, {data: studio});\r\n  }\r\n\r\n}\r\n","export default \"a:hover {\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uby1wYWdlL25vLXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9uby1wYWdlL25vLXBhZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImE6aG92ZXIge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { TitleService } from 'src/app/services/title.service';\r\n\r\n@Component({\r\n  selector: 'app-no-page',\r\n  templateUrl: './no-page.component.html',\r\n  styleUrls: ['./no-page.component.css']\r\n})\r\nexport class NoPageComponent {\r\n\r\n  constructor(\r\n    private titleService: TitleService\r\n  ) {\r\n    this.titleService.setTitle('Page Not Found');\r\n  }\r\n\r\n}\r\n","export default \".no-item {\\r\\n    color: grey;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wbGFuL3BsYW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGxhbi9wbGFuLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm8taXRlbSB7XHJcbiAgICBjb2xvcjogZ3JleTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PlanService } from 'src/app/services/plan.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { Plan } from 'src/app/models/plan';\r\nimport { MalSearched, SendingSearchedProtocol, searchedProtocolFactory } from 'src/app/models/searched';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\nimport { cloneObject, notOK, isOK } from 'src/app/models/item';\r\nimport { HeaderAlign } from 'src/app/models/headerAlign';\r\nimport { TitleService } from 'src/app/services/title.service';\r\nimport { StudioDialogComponent } from '../dialogs/studio-dialog/studio-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-plan',\r\n  templateUrl: './plan.component.html',\r\n  styleUrls: ['./plan.component.css']\r\n})\r\nexport class PlanComponent extends HeaderAlign<Plan> implements OnInit {\r\n  plans: Plan[];\r\n  planMap: Map<string, Plan>;\r\n\r\n  loading: boolean = false;\r\n  writing: Plan = null;\r\n  studios: string = null;\r\n\r\n  constructor(\r\n    private planService: PlanService,\r\n    private route: ActivatedRoute,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog,\r\n    private searchService: SearchService,\r\n    private titleService: TitleService,\r\n    private router: Router\r\n  ) {\r\n    super([1], [4]);\r\n    this.titleService.setTitle('시청 예정');\r\n    this.planService.getPlans().subscribe(plans => {\r\n      this.plans = plans;\r\n      super.setItems([this.plans]);\r\n      this.plans.sort((a, b) => { return a.title[a.title.rv].localeCompare(b.title[b.title.rv]) });\r\n      this.planMap = new Map<string, Plan>();\r\n      for (let plan of this.plans) this.planMap.set(plan._id, plan);\r\n      setTimeout(() => this.scrollToElement(), 500); // to wait for page loading\r\n    });\r\n  }\r\n\r\n  private scrollToElement() {\r\n    if ( this.route.snapshot.paramMap.get('_id') ) {\r\n      const _id = this.route.snapshot.paramMap.get('_id');\r\n      this.click(_id);\r\n      let element: HTMLElement = document.getElementById(_id);\r\n      try {\r\n        element.scrollIntoView();\r\n      } catch(e) {\r\n        alert('잘못된 ID값입니다: ' + _id);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected getAlignment(standard: number) {\r\n    switch(standard) {\r\n      case 0: return (a: Plan, b: Plan) => { return a.type.localeCompare(b.type) * this.alignments[0][standard] }\r\n      case 1: return (a: Plan, b: Plan) => { return a.title[a.title.rv].localeCompare(b.title[b.title.rv]) * this.alignments[0][standard] }\r\n      case 2: return (a: Plan, b: Plan) => { return (a.studios[0] ? a.studios[0] : '-').localeCompare((b.studios[0] ? b.studios[0] : '-')) * this.alignments[0][standard] }\r\n      case 3: return (a: Plan, b: Plan) => { return (new Date(a.aired ? a.aired : null).getTime() - new Date(b.aired ? b.aired : null).getTime()) * this.alignments[0][standard] }\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  getQuarterFromAiredDate(aired: string): string {\r\n    if ( !aired || aired == '' ) return '-';\r\n    let date = new Date(aired);\r\n    let year = date.getFullYear().toString().substring(2);\r\n    let qtr = Math.floor((date.getMonth() + 4) / 3);\r\n    return `'${year} - ${qtr}`;\r\n  }\r\n\r\n  click(_id: string) {\r\n    let plan: Plan = this.planMap.get(_id);\r\n    if ( !plan ) return;\r\n    if ( plan.modifying ) return;\r\n    plan.opened = !plan.opened;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private searchedToItem(plan: Plan, malSearched: MalSearched) {\r\n    if ( malSearched.title.kor ) plan.title.kor = malSearched.title.kor;\r\n    plan.title.eng = malSearched.title.eng;\r\n    plan.title.jpn = malSearched.title.jpn;\r\n    plan.aired = malSearched.aired.start;\r\n    plan.mal_id = malSearched.mal_id;\r\n    plan.img = malSearched.img;\r\n    plan.type = malSearched.type;\r\n    this.studios = malSearched.studios.join('\\n');\r\n  }\r\n\r\n  search(option: string, text: string, item: Plan) {\r\n    if ( !option ) {\r\n      alert('옵션을 선택해주세요.');\r\n      return;\r\n    }\r\n    if ( !text || text == '' ) {\r\n      alert('비어있습니다.');\r\n      return;\r\n    }\r\n\r\n    if ( option == 'mal_id' ) {\r\n      let id = parseInt(text);\r\n      if ( isNaN(id) ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['숫자를 입력해야 합니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.searchService.mal(id).subscribe(result => {\r\n        this.loading = false;\r\n        if ( result.mal_id ) this.searchedToItem(item, result);\r\n        else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['존재하지 않는 ID이거나 오류가 발생했습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const data: SendingSearchedProtocol = searchedProtocolFactory(text, option);\r\n      const dialogRef = this.dialog.open(SearchDialogComponent, {data: data});\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        if ( data.malSearched ) {\r\n          this.searchedToItem(item, data.malSearched);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEdit(_id?: string) {\r\n    if ( _id ) this.planMap.get(_id).modifying = null;\r\n    this.writing = null;\r\n    this.studios = '';\r\n  }\r\n\r\n  private closeAllEdit() {\r\n    for (let plan of this.plans) if ( plan.modifying ) this.closeEdit(plan._id);\r\n    this.closeEdit();\r\n  }\r\n\r\n  modify(_id: string) {\r\n    this.closeAllEdit();\r\n    this.planMap.get(_id).opened = false;\r\n    let clone: Plan = cloneObject(this.planMap.get(_id));\r\n    this.planMap.get(_id).modifying = clone;\r\n    this.studios = this.planMap.get(_id).studios.join('\\n');\r\n  }\r\n\r\n  onModifySubmit(_id: string, i: number) {\r\n    if ( !confirm('저장하시겠습니까?') ) return;\r\n    let plan: Plan = this.planMap.get(_id).modifying;\r\n    if ( !isOK(plan.title[plan.title.rv]) ) return notOK(['대표가 되는 제목은 입력해야 합니다.']);\r\n    plan.studios = this.studios.trim().split('\\n');\r\n    this.planService.modifyPlan(plan).subscribe(result => {\r\n      if ( result._id ) {\r\n        this.planMap.delete(_id);\r\n        this.planMap.set(_id, plan);\r\n        this.plans[i] = plan;\r\n        this.click(_id);\r\n      } else {\r\n        alert('오류가 발생하였습니다.');\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  write() {\r\n    this.closeAllEdit();\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let qtr = Math.floor((date.getMonth() + 4) / 3);\r\n    this.writing = {\r\n      title: {\r\n        kor: '',\r\n        eng: '',\r\n        jpn: '',\r\n        rv: 'kor'\r\n      },\r\n      type: 'tva',\r\n      memo: '',\r\n      mal_id: undefined,\r\n      img: undefined,\r\n      aired: '',\r\n      studios: []\r\n    };\r\n  }\r\n\r\n  onWriteSubmit() {\r\n    if ( !isOK(this.writing.title[this.writing.title.rv]) ) return notOK(['대표가 되는 제목은 입력해야 합니다.']);\r\n\r\n    let trim = this.studios.trim();\r\n    if ( trim != '' ) this.writing.studios = trim.split('\\n');\r\n    this.planService.addPlan(this.writing).subscribe(result => {\r\n      if ( result._id ) {\r\n        alert('작성되었습니다.');\r\n        this.planMap.set(result._id, result);\r\n        this.plans.push(result);\r\n        this.align();\r\n        this.writing = null;\r\n      } else {\r\n        alert('오류가 발생하였습니다.');\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  done(_id: string) {\r\n    this.router.navigate([`/${this.planMap.get(_id).type}/data-from-plan`, _id]);\r\n  }\r\n\r\n  remove(_id: string, i: number) {\r\n    if ( !confirm('삭제하시겠습니까?') ) return;\r\n    this.planService.removePlan(_id).subscribe(err => {\r\n      if ( err ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.planMap.delete(_id);\r\n        this.plans.splice(i, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAll() {\r\n    this.planMap.forEach((value, key) => {\r\n      if ( !value.opened ) this.click(key);\r\n    });\r\n  }\r\n\r\n  closeAll() {\r\n    this.planMap.forEach((value, key) => {\r\n      if ( value.opened ) this.click(key);\r\n    });\r\n  }\r\n\r\n  findByStudio(studio: string) {\r\n    this.dialog.open(StudioDialogComponent, {data: studio});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdHZhL3R2YS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TvaService } from 'src/app/services/tva.service';\r\nimport { Tva, TvaSequence } from 'src/app/models/tva';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MovieService } from 'src/app/services/movie.service';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { MatDialog, MatAutocompleteSelectedEvent } from '@angular/material';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\nimport { SendingSearchedProtocol, MalSearched, searchedProtocolFactory } from 'src/app/models/searched';\r\nimport { cloneObject, isOK, notOK } from 'src/app/models/item';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\nimport { PlanService } from 'src/app/services/plan.service';\r\nimport { HeaderAlign } from 'src/app/models/headerAlign';\r\nimport { SendingTextProtocol, TextFieldDialogComponent } from '../dialogs/text-field-dialog/text-field-dialog.component';\r\nimport { TitleService } from 'src/app/services/title.service';\r\nimport { StudioDialogComponent } from '../dialogs/studio-dialog/studio-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-tva',\r\n  templateUrl: './tva.component.html',\r\n  styleUrls: ['./tva.component.css']\r\n})\r\nexport class TvaComponent extends HeaderAlign<Tva> implements OnInit {\r\n  tvas: Tva[] = null;\r\n  tvaMap: Map<string, Tva>;\r\n  modifying: {\r\n    seriesTitle: string,\r\n    studios: string,\r\n    series: number,\r\n    sequence: number\r\n  } = null;\r\n  loading: boolean = false;\r\n\r\n  seriesControl: FormControl;\r\n  seriesOptions: string[];\r\n  seriesFilteredOptions: Observable<string[]>;\r\n\r\n  writeFormGroup: FormGroup;\r\n\r\n  categoryControl: FormControl;\r\n  categoryOptions: string[];\r\n  categoryFilteredOptions: Observable<string[]>;\r\n\r\n  writing: boolean = false;\r\n  writingTva: TvaSequence;\r\n  seriesMemo: string;\r\n\r\n  from: string = undefined;\r\n  incompletion_id: string = undefined;\r\n\r\n  counts = {\r\n    sequences: 0,\r\n    episodes: 0\r\n  };\r\n\r\n  constructor(\r\n    private tvaService: TvaService,\r\n    private movieService: MovieService,\r\n    private watchingService: WatchingService,\r\n    private planService: PlanService,\r\n    private searchService: SearchService,\r\n    private titleService: TitleService,\r\n    private route: ActivatedRoute,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    super([2], [6]);\r\n    this.titleService.setTitle('TVA');\r\n    this.tvaService.getTvas().subscribe(tvas => {\r\n      this.tvas = tvas;\r\n      super.setItems([this.tvas]);\r\n      this.tvaMap = new Map<string, Tva>();\r\n      tvas.map(v => this.tvaMap.set(v._id, v));\r\n      this.count();\r\n      this.align();\r\n      setTimeout(() => this.scrollToElement(), 500); // to wait for page loading\r\n    });\r\n  }\r\n\r\n  protected getAlignment(standard: number) {\r\n    switch(standard) {\r\n      case 0: return (a: Tva, b: Tva) => { return a.category.localeCompare(b.category) * this.alignments[0][standard] }\r\n      case 1: return (a: Tva, b: Tva) => { return a.series[0].title.localeCompare(b.series[0].title) * this.alignments[0][standard] }\r\n      case 2: return (a: Tva, b: Tva) => { return a.series[0].sequences[0].title[a.series[0].sequences[0].title.rv].localeCompare(b.series[0].sequences[0].title[a.series[0].sequences[0].title.rv]) * this.alignments[0][standard] }\r\n      case 3: return (a: Tva, b: Tva) => { return a.series[0].sequences[0].studios[0].localeCompare(b.series[0].sequences[0].studios[0]) * this.alignments[0][standard] }\r\n      case 4: return (a: Tva, b: Tva) => { return (a.series[0].sequences[0].episodes - b.series[0].sequences[0].episodes) * this.alignments[0][standard] }\r\n      case 5: return (a: Tva, b: Tva) => { return (new Date(a.series[0].sequences[0].aired.start).getTime() - new Date(b.series[0].sequences[0].aired.start).getTime()) * this.alignments[0][standard] }\r\n      default: return;\r\n    }\r\n  }\r\n\r\n  private scrollToElement() {\r\n    if ( this.route.snapshot.paramMap.get('_id') ) {\r\n      const _id = this.route.snapshot.paramMap.get('_id');\r\n      this.clickTvaWithId(_id, +this.route.snapshot.paramMap.get('series'), +this.route.snapshot.paramMap.get('sequence'));\r\n      let element: HTMLElement = document.getElementById(_id);\r\n      try {\r\n        element.scrollIntoView();\r\n      } catch(e) {\r\n        alert('알 수 없는 에러가 발생하였습니다.\\n' + e);\r\n      }\r\n    } else if ( this.route.snapshot.paramMap.get('from') ) {\r\n      this.writeTva();\r\n      this.from = this.route.snapshot.paramMap.get('from');\r\n      this.incompletion_id = this.route.snapshot.paramMap.get('incompletion_id');\r\n      (this.from == 'data-from-watching' ? this.watchingService : this.planService).get(this.incompletion_id).subscribe(result => {\r\n        if ( !result._id ) {\r\n          alert('알 수 없는 에러가 발생하였습니다.\\n' + result);\r\n          return;\r\n        }\r\n        if ( result.mal_id ) this.searchTva('mal_id', result.mal_id.toString());\r\n        else {\r\n          this.writingTva.aired.start = result.aired;\r\n          this.writingTva.studios = result.studios;\r\n        }\r\n        this.writingTva.title = result.title;\r\n        this.writingTva.memo = result.memo;\r\n        let element: HTMLElement = document.getElementById('writing-area');\r\n        try {\r\n          element.scrollIntoView();\r\n        } catch(e) {\r\n          alert('알 수 없는 에러가 발생하였습니다.\\n' + e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  allElementsLength(t: number): number {\r\n    let count = 0;\r\n    for (let i=0; i<this.tvas[t].series.length; i++) {\r\n      count += this.tvas[t].series[i].sequences.length;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  clickTva(t: number, series: number, sequence: number) {\r\n    if ( this.tvas[t].modifying ) return;\r\n    let opened = {series: series, sequence: sequence, linked: null};\r\n    if ( this.tvas[t].opened ) {\r\n      if ( this.tvas[t].opened.series != series || this.tvas[t].opened.sequence != sequence ) {\r\n        opened.linked = this.tvas[t].opened.linked;\r\n        this.tvas[t].opened = opened;\r\n      } else this.tvas[t].opened = null;\r\n      return;\r\n    }\r\n    this.tvas[t].opened = opened;\r\n    this.setLinkedTva(t, this.tvas[t].category_movie, this.tvas[t].series[series].key);\r\n  }\r\n\r\n  clickTvaWithId(_id: string, series: number, sequence: number) {\r\n    if ( this.tvaMap.get(_id).modifying ) return;\r\n    let opened = {series: series, sequence: sequence, linked: null};\r\n    if ( this.tvaMap.get(_id).opened ) {\r\n      if ( this.tvaMap.get(_id).opened.series != series || this.tvaMap.get(_id).opened.sequence != sequence ) {\r\n        opened.linked = this.tvaMap.get(_id).opened.linked;\r\n        this.tvaMap.get(_id).opened = opened;\r\n      } else this.tvaMap.get(_id).opened = null;\r\n      return;\r\n    }\r\n    this.tvaMap.get(_id).opened = opened;\r\n    this.setLinkedTvaWithId(_id, this.tvaMap.get(_id).category_movie, this.tvaMap.get(_id).series[series].key);\r\n  }\r\n\r\n  private setLinkedTva(t: number, movie_id: string, key: string) {\r\n    if ( !this.tvas[t].category_movie ) return;\r\n    if ( this.tvas[t].opened.linked ) return;\r\n    this.movieService.getMovie(movie_id).subscribe(movie => {\r\n      for (let i=0; i<movie.series.length; i++) {\r\n        if ( movie.series[i].key == key ) {\r\n          this.tvas[t].opened.linked = {\r\n            title: movie.series[i].title,\r\n            _id: movie._id,\r\n            series: i\r\n          };\r\n          return;\r\n        }\r\n      }\r\n      this.tvas[t].opened.linked = null;\r\n    });\r\n  }\r\n\r\n  private setLinkedTvaWithId(_id: string, movie_id: string, key: string) {\r\n    if ( !this.tvaMap.get(_id).category_movie ) return;\r\n    if ( this.tvaMap.get(_id).opened.linked ) return;\r\n    this.movieService.getMovie(movie_id).subscribe(movie => {\r\n      for (let i=0; i<movie.series.length; i++) {\r\n        if ( movie.series[i].key == key ) {\r\n          this.tvaMap.get(_id).opened.linked = {\r\n            title: movie.series[i].title,\r\n            _id: movie._id,\r\n            series: i\r\n          };\r\n          return;\r\n        }\r\n      }\r\n      this.tvaMap.get(_id).opened.linked = null;\r\n    });\r\n  }\r\n\r\n  editCategory(t: number) {\r\n    const data: SendingTextProtocol = {\r\n      title: '카테고리명 수정',\r\n      explain: '수정할 카테고리명을 입력해주세요.',\r\n      placeholder: '카테고리명',\r\n      text: this.tvas[t].category\r\n    }\r\n    const dialogRef = this.dialog.open(TextFieldDialogComponent, {data: data});\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      if ( !data.text || data.text == '' ) return;\r\n      this.tvas[t].category = data.text;\r\n      this.tvaService.modifyTva(this.tvas[t]).subscribe(result => {\r\n        if ( !result._id ) alert('수정 실패');\r\n      });\r\n    });\r\n  }\r\n\r\n  private setStudio(studios: string[]) {\r\n    this.modifying.studios = '';\r\n    for (let studio of studios) this.modifying.studios += studio + '\\n';\r\n  }\r\n\r\n  modifyTva(t: number, series: number, sequence: number) {\r\n    this.tvas[t].opened = null;\r\n    for (let tva of this.tvas) tva.modifying = null;\r\n    this.tvas[t].modifying = cloneObject(this.tvas[t].series[series].sequences[sequence]);\r\n    this.modifying = {series: series, sequence: sequence, studios: undefined, seriesTitle: this.tvas[t].series[series].title};\r\n    this.setStudio(this.tvas[t].modifying.studios);\r\n\r\n    this.seriesOptions = [];\r\n    this.seriesControl = new FormControl();\r\n    for (let s of this.tvas[t].series) this.seriesOptions.push(s.title);\r\n    this.seriesFilteredOptions = this.seriesControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => {\r\n        return this.seriesOptions.filter(option => option.toLowerCase().includes(value.toLowerCase()));\r\n      })\r\n    );\r\n    this.seriesControl.setValue(this.tvas[t].series[series].title);\r\n  }\r\n\r\n  cancelModify(t: number) {\r\n    this.tvas[t].modifying = null;\r\n    this.tvas[t].opened = null;\r\n    this.clickTva(t, this.modifying.series, this.modifying.sequence);\r\n  }\r\n\r\n  cancelWrite() {\r\n    this.writing = false;\r\n  }\r\n\r\n  onModifySubmit(t: number, series: number, sequence: number) {\r\n    if ( !confirm('저장하시겠습니까?') ) return;\r\n\r\n    // validating input values\r\n    if ( !isOK(this.tvas[t].modifying, ['memo']) ) return notOK();\r\n    this.modifying.seriesTitle = this.seriesControl.value;\r\n    if ( !isOK(this.modifying) ) return notOK();\r\n\r\n    // change series with input title\r\n    this.tvas[t].series[series].sequences.splice(sequence, 1);\r\n    let flag: boolean = false;\r\n    for (let i=0; i<this.tvas[t].series.length; i++) {\r\n      if ( this.tvas[t].series[i].title == this.modifying.seriesTitle ) {\r\n        flag = true;\r\n        this.tvas[t].modifying.studios = this.modifying.studios.trim().split('\\n');\r\n        this.tvas[t].series[i].sequences.push(this.tvas[t].modifying);\r\n        this.tvas[t].series[i].sequences.sort((a, b) => { return a.season - b.season; });\r\n        series = i;\r\n        for (let j=0; j<this.tvas[t].series[i].sequences.length; j++) {\r\n          if ( this.tvas[t].series[i].sequences[j].season == this.tvas[t].modifying.season ) {\r\n            sequence = j;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    // create a new series with input title\r\n    if ( !flag ) {\r\n      this.tvas[t].series.push({\r\n        title: this.modifying.seriesTitle,\r\n        key: new Date().getTime().toString(),\r\n        memo: '',\r\n        sequences: [ this.tvas[t].modifying ]\r\n      });\r\n      series = this.tvas[t].series.length - 1;\r\n      sequence = 0;\r\n      this.tvas[t].series.sort((a, b) => { return new Date(a.sequences[0].aired.start).getTime() - new Date(b.sequences[0].aired.start).getTime() });\r\n    }\r\n\r\n    // remove empty series (which has an empty sequence)\r\n    for (let i=0; i<this.tvas[t].series.length; i++) {\r\n      if ( this.tvas[t].series[i].sequences.length == 0 ) {\r\n        this.tvas[t].series.splice(i, 1);\r\n        if ( series >= i ) series--;\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.tvaService.modifyTva(this.tvas[t]).subscribe(result => {\r\n      if ( result._id ) {\r\n        this.tvas[t].modifying = null;\r\n        this.clickTva(t, series, sequence);\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['수정되었습니다.'],\r\n          type: 'success',\r\n          timeout: 2000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private searchedToSequence(sequence: TvaSequence, malSearched: MalSearched) {\r\n    if ( malSearched.title.kor ) sequence.title.kor = malSearched.title.kor;\r\n    sequence.title.eng = malSearched.title.eng;\r\n    sequence.title.jpn = malSearched.title.jpn;\r\n    sequence.premiered.year = malSearched.premiered.year;\r\n    sequence.premiered.quarter = malSearched.premiered.quarter;\r\n    sequence.aired = malSearched.aired;\r\n    sequence.episodes = malSearched.episodes;\r\n    sequence.studios = malSearched.studios;\r\n    sequence.mal_id = malSearched.mal_id;\r\n    sequence.img = malSearched.img;\r\n    this.setStudio(sequence.studios);\r\n  }\r\n\r\n  searchTva(option: string, text: string, t?: number) {\r\n    if ( !option ) {\r\n      alert('옵션을 선택해주세요.');\r\n      return;\r\n    }\r\n    if ( !text || text == '' ) {\r\n      alert('비어있습니다.');\r\n      return;\r\n    }\r\n\r\n    let tva: TvaSequence = t ? this.tvas[t].modifying : this.writingTva;\r\n    if ( option == 'mal_id' ) {\r\n      let id = parseInt(text);\r\n      if ( isNaN(id) ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['숫자를 입력해야 합니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.searchService.mal(id).subscribe(result => {\r\n        this.loading = false;\r\n        if ( result.mal_id ) this.searchedToSequence(tva, result);\r\n        else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['존재하지 않는 ID이거나 오류가 발생했습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const data: SendingSearchedProtocol = searchedProtocolFactory(text, option);\r\n      const dialogRef = this.dialog.open(SearchDialogComponent, {data: data});\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        if ( data.malSearched ) {\r\n          this.searchedToSequence(tva, data.malSearched);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  writeTva() {\r\n    this.categoryOptions = [];\r\n    this.seriesOptions = [];\r\n    for (let tva of this.tvas) {\r\n      this.categoryOptions.push(tva.category);\r\n      tva.modifying = null;\r\n    }\r\n    this.categoryControl = new FormControl();\r\n    this.categoryFilteredOptions = this.categoryControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => {\r\n        return this.categoryOptions.filter(option => option.toLowerCase().includes(value.toLowerCase()));\r\n      })\r\n    );\r\n    this.writeFormGroup = new FormGroup({\r\n      writeSeriesControl: new FormControl()\r\n    });\r\n\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let qtr = Math.floor((date.getMonth() + 4) / 3);\r\n    this.seriesMemo = '';\r\n    this.writing = true;\r\n    this.writingTva = {\r\n      title: {kor: '', eng: '', jpn: '', rv: 'kor'},\r\n      premiered: {year: year, quarter: qtr},\r\n      aired: {start: '', end: ''},\r\n      season: 1,\r\n      episodes: 0,\r\n      studios: [],\r\n      memo: '',\r\n      mal_id: 0,\r\n      img: ''\r\n    };\r\n    this.modifying = {\r\n      seriesTitle: '',\r\n      studios: '',\r\n      series: 0,\r\n      sequence: 0\r\n    };\r\n  }\r\n\r\n  categoryInput(event: MatAutocompleteSelectedEvent) {\r\n    for (let tva of this.tvas) {\r\n      if ( event.option.value == tva.category ) {\r\n        this.seriesOptions = [];\r\n        for (let series of tva.series) this.seriesOptions.push(series.title);\r\n        this.seriesFilteredOptions = this.writeFormGroup.get('writeSeriesControl').valueChanges.pipe(\r\n          startWith(''),\r\n          map(value => {\r\n            return this.seriesOptions.filter(option => option.toLowerCase()\r\n              .includes(value.toLowerCase()));\r\n          })\r\n        );\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  seriesInput(event: MatAutocompleteSelectedEvent) {\r\n    for (let tva of this.tvas) {\r\n      if ( event.option.value == tva.category ) {\r\n        for (let series of tva.series) {\r\n          if ( this.writeFormGroup.get('writeSeriesControl').value == series.title ) {\r\n            this.seriesMemo = series.memo;\r\n            this.writingTva.season = series.sequences.length + 1;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onWriteSubmit() {\r\n    // validating input values\r\n    if ( !isOK(this.writingTva, ['memo']) ) return notOK();\r\n    this.modifying.seriesTitle = this.writeFormGroup.get('writeSeriesControl').value;\r\n    if ( !isOK(this.modifying) || !isOK(this.categoryControl.value) ) return notOK();\r\n\r\n    let category: number = -1;\r\n    let series: number = -1;\r\n    for (let i=0; i<this.tvas.length; i++) {\r\n      if ( this.tvas[i].category == this.categoryControl.value ) {\r\n        category = i;\r\n        for (let j=0; j<this.tvas[i].series.length; j++) {\r\n          if ( this.tvas[i].series[j].title == this.writeFormGroup.get('writeSeriesControl').value ) {\r\n            series = j;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    let newTva: Tva;\r\n    this.writingTva.studios = this.modifying.studios.trim().split('\\n');\r\n    if ( category != -1 ) {\r\n      newTva = this.tvas[category];\r\n      if ( series != -1 ) { // add to an existing series\r\n        newTva.series[series].sequences.push(this.writingTva);\r\n        newTva.series[series].sequences.sort((a, b) => { return a.season - b.season });\r\n      } else {  // add new series\r\n        newTva.series.push({\r\n          title: <string> this.writeFormGroup.get('writeSeriesControl').value,\r\n          key: new Date().getTime().toString(),\r\n          memo: this.seriesMemo,\r\n          sequences: [ this.writingTva ]\r\n        });\r\n        newTva.series.sort((a, b) => {\r\n          return new Date(a.sequences[0].aired.start).getTime() - new Date(b.sequences[0].aired.start).getTime();\r\n        });\r\n      }\r\n      this.tvaService.modifyTva(newTva).subscribe(result => {\r\n        if ( result._id ) {\r\n          alert('추가되었습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['추가되었습니다.'],\r\n            type: 'success',\r\n            timeout: 2000\r\n          });\r\n          this.tvaMap.set(result._id, result);\r\n          this.clickTvaWithId(result._id, series, result.series[series].sequences.length-1);\r\n          setTimeout(() => {\r\n            try {\r\n              let el = document.getElementById(result._id);\r\n              el.scrollIntoView();\r\n            } catch(e) {}\r\n          }, 500);\r\n          this.writing = false;\r\n          if ( this.incompletion_id ) {\r\n            (this.from == 'data-from-watching' ? this.watchingService : this.planService).remove(this.incompletion_id).subscribe(err => {\r\n              if ( err ) alert('원래의 목록에서 삭제하는 도중 오류가 발생하였습니다.');\r\n              else this.incompletion_id = undefined;\r\n            });\r\n          }\r\n        } else {\r\n          alert('오류가 발생하였습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['오류가 발생하였습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n        return;\r\n      });\r\n    } else {\r\n      newTva = {\r\n        category: <string> this.categoryControl.value,\r\n        category_movie: null,\r\n        series: [{\r\n          title: <string> this.writeFormGroup.get('writeSeriesControl').value,\r\n          key: new Date().getTime().toString(),\r\n          memo: this.seriesMemo,\r\n          sequences: [ this.writingTva ]\r\n        }]\r\n      };\r\n      this.tvaService.addTva(newTva).subscribe(result => {\r\n        if ( result._id ) {\r\n          alert('추가되었습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['추가되었습니다.'],\r\n            type: 'success',\r\n            timeout: 2000\r\n          });\r\n          this.writing = false;\r\n          this.tvas.push(result);\r\n          this.align();\r\n          this.tvaMap.set(result._id, result);\r\n          this.clickTvaWithId(result._id, 0, 0);\r\n          setTimeout(() => {\r\n            try { document.getElementById(result._id).scrollIntoView() }\r\n            catch(e) {}\r\n          }, 500);\r\n          if ( this.incompletion_id ) {\r\n            (this.from == 'data-from-watching' ? this.watchingService : this.planService).remove(this.incompletion_id).subscribe(err => {\r\n              if ( err ) alert('원래의 목록에서 삭제하는 도중 오류가 발생하였습니다.');\r\n              else this.incompletion_id = undefined;\r\n            });\r\n          }\r\n        } else {\r\n          alert('오류가 발생하였습니다.');\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['오류가 발생하였습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n        return;\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  removeTva(t: number, series: number, sequence: number) {\r\n    if ( !confirm('삭제하시겠습니까?') ) return;\r\n    this.tvaService.removeTva(this.tvas[t]._id, series, sequence).subscribe(err => {\r\n      if ( err ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.tvas.splice(t, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAll() {\r\n    for (let i=0; i<this.tvas.length; i++) {\r\n      this.tvas[i].opened = null;\r\n      this.clickTva(i, 0, 0);\r\n    }\r\n  }\r\n\r\n  closeAll() {\r\n    for (let tva of this.tvas) {\r\n      tva.opened = null;\r\n    }\r\n  }\r\n\r\n  count() {\r\n    if ( this.tvas ) {\r\n      this.tvas.map(tva => {\r\n        tva.series.map(series => {\r\n          this.counts.sequences += series.sequences.length;\r\n          series.sequences.map(sequence => this.counts.episodes += sequence.episodes);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  findByStudio(studio: string) {\r\n    this.dialog.open(StudioDialogComponent, {data: studio});\r\n  }\r\n\r\n  toCategory(rv: string) {\r\n    const s: string = this.writingTva.title[rv];\r\n    this.categoryControl.setValue(s);\r\n    this.writeFormGroup.get('writeSeriesControl').setValue(s);\r\n  }\r\n\r\n}\r\n","export default \".download-link {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.download-link:hover {\\r\\n    color: grey;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.inner-table-section {\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy93YXRjaGluZy93YXRjaGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy93YXRjaGluZy93YXRjaGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRvd25sb2FkLWxpbmsge1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uZG93bmxvYWQtbGluazpob3ZlciB7XHJcbiAgICBjb2xvcjogZ3JleTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuLmlubmVyLXRhYmxlLXNlY3Rpb24ge1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Watching } from 'src/app/models/watching';\r\nimport { WatchingService } from 'src/app/services/watching.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgFlashMessageService } from 'ng-flash-messages';\r\nimport { SendingSearchedProtocol, searchedProtocolFactory, MalSearched, Broadcast } from 'src/app/models/searched';\r\nimport { SearchDialogComponent } from '../dialogs/search-dialog/search-dialog.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { SearchService } from 'src/app/services/search.service';\r\nimport { isOK, notOK, cloneObject } from 'src/app/models/item';\r\nimport { SendingOhliProtocol } from 'src/app/models/ohli';\r\nimport { OhliDialogComponent } from '../dialogs/ohli-dialog/ohli-dialog.component';\r\nimport { PlanService } from 'src/app/services/plan.service';\r\nimport { HeaderAlign } from 'src/app/models/headerAlign';\r\nimport { TitleService } from 'src/app/services/title.service';\r\nimport { StudioDialogComponent } from '../dialogs/studio-dialog/studio-dialog.component';\r\nimport { EndedDialogComponent } from '../dialogs/ended-dialog/ended-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-watching',\r\n  templateUrl: './watching.component.html',\r\n  styleUrls: ['./watching.component.css']\r\n})\r\nexport class WatchingComponent extends HeaderAlign<Watching> implements OnInit {\r\n  watchingMap: Map<string, Watching>;\r\n  airings: Watching[] = null;\r\n  ends: Watching[] = null;\r\n\r\n  loading: boolean = false;\r\n  writing: Watching = null;\r\n  studios: string = null;\r\n\r\n  plan_id: string = null;\r\n\r\n  private readonly days: string[] = [\r\n    '일', '월', '화', '수', '목', '금', '토'\r\n  ];\r\n\r\n  constructor(\r\n    private watchingService: WatchingService,\r\n    private planService: PlanService,\r\n    private route: ActivatedRoute,\r\n    private flashMessage: NgFlashMessageService,\r\n    private dialog: MatDialog,\r\n    public searchService: SearchService,\r\n    private titleService: TitleService\r\n  ) {\r\n    super([4, 1], [5, 4]);\r\n    this.titleService.setTitle('시청 중');\r\n    this.watchingService.getWatchings().subscribe(watchings => {\r\n      this.watchingMap = new Map<string, Watching>();\r\n      this.airings = [];\r\n      this.ends = [];\r\n      for (let watching of watchings) {\r\n        if ( watching.ohli_id ) this.airings.push(watching);\r\n        else this.ends.push(watching);\r\n        this.watchingMap.set(watching._id, watching);\r\n      }\r\n      this.setItems([this.airings, this.ends]);\r\n      this.align(0);\r\n      this.align(1);\r\n      setTimeout(() => this.scrollToElement(), 500); // to wait for page loading\r\n    });\r\n  }\r\n\r\n  protected getAlignment(standard: number, num?: number) {\r\n    switch(standard) {\r\n      case 0: return (a: Watching, b: Watching) => { return a.type.localeCompare(b.type) * this.alignments[num][standard] }\r\n      case 1: return (a: Watching, b: Watching) => { return a.title[a.title.rv].localeCompare(b.title[b.title.rv]) * this.alignments[num][standard] }\r\n      case 2: return (a: Watching, b: Watching) => { return a.studios[0].localeCompare(b.studios[0]) * this.alignments[num][standard] }\r\n      case 3: return (a: Watching, b: Watching) => { return (new Date(a.aired ? a.aired : null).getTime() - new Date(b.aired ? b.aired : null).getTime()) * this.alignments[num][standard] }\r\n      case 4: return (a: Watching, b: Watching) => { return ( a.broadcast.day != b.broadcast.day ? a.broadcast.day - b.broadcast.day : (a.broadcast.hour * 100 + a.broadcast.minute) - (b.broadcast.hour * 100 + b.broadcast.minute) ) * this.alignments[num][standard] }\r\n      default: return null;\r\n    }\r\n  }\r\n\r\n  private scrollToElement() {\r\n    if ( this.route.snapshot.paramMap.get('_id') ) {\r\n      const _id = this.route.snapshot.paramMap.get('_id');\r\n      this.click(_id);\r\n      let element: HTMLElement = document.getElementById(_id);\r\n      try {\r\n        element.scrollIntoView();\r\n      } catch(e) {\r\n        alert('알 수 없는 에러가 발생하였습니다.\\n' + e);\r\n      }\r\n    } else if ( this.route.snapshot.paramMap.get('plan_id') ) {\r\n      this.plan_id = this.route.snapshot.paramMap.get('plan_id');\r\n      this.write();\r\n      this.planService.getPlan(this.plan_id).subscribe(plan => {\r\n        this.writing.title = plan.title;\r\n        this.writing.type = plan.type;\r\n        this.writing.memo = plan.memo;\r\n        if ( plan.aired ) this.writing.aired = plan.aired;\r\n        this.studios = plan.studios.join('\\n');\r\n        if ( plan.mal_id ) this.search('mal_id', plan.mal_id.toString(), this.writing);\r\n        try {\r\n          let el = document.getElementById('writing-area');\r\n          el.scrollIntoView();\r\n        } catch(e) { alert('에러가 발생하였습니다.\\n' + e) }\r\n      });\r\n    }\r\n  }\r\n\r\n  click(_id: string) {\r\n    let watching: Watching = this.watchingMap.get(_id);\r\n    if ( watching.modifying ) return;\r\n    if ( watching.opened ) watching.opened = false;\r\n    else {\r\n      watching.opened = true;\r\n      if ( watching.ohli_id ) {\r\n        this.watchingService.getVideos(watching.title.eng).subscribe(videos => watching.videos = videos);\r\n        this.watchingService.getOhys(watching.title.eng).subscribe(ohys => {watching.ohys = ohys; console.log(ohys)});\r\n        this.watchingService.getSubtitles(watching.ohli_id).subscribe(subtitles => watching.subtitles = subtitles);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private searchedToItem(watching: Watching, malSearched: MalSearched) {\r\n    if ( malSearched.title.kor ) watching.title.kor = malSearched.title.kor;\r\n    watching.title.eng = malSearched.title.eng;\r\n    watching.title.jpn = malSearched.title.jpn;\r\n    watching.aired = malSearched.aired.start;\r\n    watching.premiered = malSearched.premiered;\r\n    watching.broadcast = malSearched.broadcast;\r\n    watching.mal_id = malSearched.mal_id;\r\n    watching.img = malSearched.img;\r\n    watching.type = malSearched.type;\r\n    this.studios = malSearched.studios.join('\\n');\r\n  }\r\n\r\n  search(option: string, text: string, item: Watching) {\r\n    if ( !option ) {\r\n      alert('옵션을 선택해주세요.');\r\n      return;\r\n    }\r\n    if ( !text || text == '' ) {\r\n      alert('비어있습니다.');\r\n      return;\r\n    }\r\n\r\n    if ( option == 'mal_id' ) {\r\n      let id = parseInt(text);\r\n      if ( isNaN(id) ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['숫자를 입력해야 합니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return;\r\n      }\r\n      this.loading = true;\r\n      this.searchService.mal(id).subscribe(result => {\r\n        this.loading = false;\r\n        if ( result.mal_id ) this.searchedToItem(item, result);\r\n        else {\r\n          this.flashMessage.showFlashMessage({\r\n            messages: ['존재하지 않는 ID이거나 오류가 발생했습니다.'],\r\n            type: 'danger',\r\n            timeout: 3000\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      const data: SendingSearchedProtocol = searchedProtocolFactory(text, option);\r\n      const dialogRef = this.dialog.open(SearchDialogComponent, {data: data});\r\n      dialogRef.afterClosed().subscribe(() => {\r\n        if ( data.malSearched ) {\r\n          this.searchedToItem(item, data.malSearched);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEdit(_id?: string) {\r\n    if ( _id ) this.watchingMap.get(_id).modifying = null;\r\n    this.writing = null;\r\n    this.studios = '';\r\n  }\r\n\r\n  private closeAllEdit() {\r\n    for (let arr of [ this.airings, this.ends ]) {\r\n      for (let item of arr) {\r\n        if ( item.modifying ) {\r\n          this.closeEdit(item._id);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    this.closeEdit();\r\n  }\r\n\r\n  findOhliId(watching: Watching) {\r\n    if ( !watching.title.kor || watching.title.kor == '' ) {\r\n      alert('한글 제목이 비어있습니다.');\r\n      return;\r\n    }\r\n    const data: SendingOhliProtocol = {title: watching.title.kor, ohli_id: null};\r\n    const dialogRef = this.dialog.open(OhliDialogComponent, {data: data});\r\n    dialogRef.afterClosed().subscribe(() => watching.ohli_id = data.ohli_id);\r\n  }\r\n\r\n  removeOhliId(watching: Watching) {\r\n    watching.ohli_id = null;\r\n  }\r\n\r\n  modify(_id: string) {\r\n    this.closeAllEdit();\r\n    this.watchingMap.get(_id).opened = false;\r\n    this.watchingMap.get(_id).modifying = cloneObject(this.watchingMap.get(_id), ['videos', 'subtitles']);\r\n    this.studios = this.watchingMap.get(_id).studios.join('\\n');\r\n  }\r\n\r\n  onModifySubmit(_id: string, i: number, isAiring: boolean) {\r\n    if ( !confirm('저장하시겠습니까?') ) return;\r\n    if ( !isOK(this.watchingMap.get(_id).modifying, ['memo']) || !isOK(this.studios) ) return notOK(['빈 필드가 있습니다.']);\r\n    let watching: Watching = this.watchingMap.get(_id).modifying;\r\n    watching.studios = this.studios.trim().split('\\n');\r\n    this.watchingService.modifyWatching(watching).subscribe(result => {\r\n      if ( result._id ) {\r\n        this.watchingMap.delete(_id);\r\n        this.watchingMap.set(_id, watching);\r\n        (isAiring ? this.airings : this.ends)[i] = watching;\r\n        this.click(_id);\r\n      } else {\r\n        alert('오류가 발생하였습니다.');\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  write() {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let qtr = Math.floor((date.getMonth() + 4) / 3);\r\n    this.closeAllEdit();\r\n    this.writing = {\r\n      title: {\r\n        kor: '',\r\n        eng: '',\r\n        jpn: '',\r\n        rv: 'kor'\r\n      },\r\n      premiered: {\r\n        year: year,\r\n        quarter: qtr\r\n      },\r\n      broadcast: undefined,\r\n      type: 'tva',\r\n      memo: '',\r\n      mal_id: 0,\r\n      img: '',\r\n      aired: '',\r\n      studios: []\r\n    };\r\n  }\r\n\r\n  onWriteSubmit() {\r\n    if ( !isOK(this.writing, ['memo', 'ohli_id', '_id', 'modifying', 'opened']) || !isOK(this.studios) ) return notOK(['빈 필드가 있습니다.']);\r\n\r\n    this.writing.studios = this.studios.trim().split('\\n');\r\n    this.watchingService.addWatching(this.writing).subscribe(result => {\r\n      if ( result._id ) {\r\n        this.watchingMap.set(result._id, result);\r\n        if ( result.ohli_id ) {\r\n          this.airings.push(result);\r\n          this.align(0);\r\n        } else {\r\n          this.ends.push(result);\r\n          this.align(1);\r\n        }\r\n        alert('추가되었습니다.');\r\n        this.writing = null;\r\n        this.click(result._id);\r\n        let el = document.getElementById(result._id);\r\n        try { el.scrollIntoView() } catch(e) {}\r\n\r\n        if ( this.plan_id ) {\r\n          this.planService.remove(this.plan_id).subscribe(err => {\r\n            if ( err ) alert('원래의 목록에서 지우던 도중 오류가 발생하였습니다.');\r\n            else this.plan_id = null;\r\n          });\r\n        }\r\n\r\n      } else {\r\n        alert('오류가 발생하였습니다.');\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  remove(_id: string, i: number, isAiring: boolean) {\r\n    if ( !confirm('삭제하시겠습니까?') ) return;\r\n    this.watchingService.removeWatching(_id).subscribe(err => {\r\n      if ( err ) {\r\n        this.flashMessage.showFlashMessage({\r\n          messages: ['오류가 발생하였습니다.'],\r\n          type: 'danger',\r\n          timeout: 3000\r\n        });\r\n        return false;\r\n      } else {\r\n        this.watchingMap.delete(_id);\r\n        (isAiring ? this.airings : this.ends).splice(i, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  openAll() {\r\n    this.watchingMap.forEach((value, key) => {\r\n      if ( !value.opened ) this.click(key);\r\n    });\r\n  }\r\n\r\n  closeAll() {\r\n    this.watchingMap.forEach((value, key) => {\r\n      if ( value.opened ) this.click(key);\r\n    });\r\n  }\r\n\r\n  getToday(): string {\r\n    let date = new Date();\r\n    return `${date.getFullYear()}년 ${date.getMonth()+1}월 ${date.getDate()}일`;\r\n  }\r\n\r\n  getDate(dateString: string): string {\r\n    let today = new Date();\r\n    let given = new Date(dateString);\r\n\r\n    if ( given.getMonth() == today.getMonth() && given.getDate() == today.getDate() )\r\n      return dateString.substring(11);\r\n    else\r\n      return `${given.getMonth()+1}/${given.getDate()}`;\r\n  }\r\n\r\n  getDay(broadcast: Broadcast): string {\r\n    const f = (n: number): string => { return n >= 10 ? `${n}` : `0${n}` };\r\n    return `${this.days[broadcast.day]} ${f(broadcast.hour)}:${f(broadcast.minute)}`;\r\n  }\r\n\r\n  getSize(size: number): string {\r\n    const dividedSize = Math.round(size / 1024 / 1024);\r\n    if ( dividedSize >= 1000 ) return (dividedSize / 1024).toFixed(2) + 'GB';\r\n    else return dividedSize + 'MB';\r\n  }\r\n\r\n  findByStudio(studio: string) {\r\n    this.dialog.open(StudioDialogComponent, {data: studio});\r\n  }\r\n\r\n  openTodayAiring() {\r\n    this.closeAll();\r\n    const today = new Date();\r\n    const broadcast: Broadcast = {\r\n      day: today.getDay(),\r\n      hour: today.getHours(),\r\n      minute: today.getMinutes()\r\n    };\r\n    let flag: boolean = false;\r\n    for (let airing of this.airings) {\r\n      if ( !airing.broadcast ) continue;\r\n      else if ( broadcast.day == airing.broadcast.day ) {\r\n        if ( broadcast.hour > airing.broadcast.hour || (broadcast.hour == airing.broadcast.hour && broadcast.minute >= airing.broadcast.minute) ) {\r\n          this.click(airing._id);\r\n          flag = true;\r\n        }\r\n      } else if ( (broadcast.day + 6) % 7 == airing.broadcast.day ) {\r\n        if ( broadcast.hour < airing.broadcast.hour || (broadcast.hour == airing.broadcast.hour && broadcast.minute <= airing.broadcast.minute ) ) {\r\n          this.click(airing._id);\r\n          flag = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if ( !flag ) {\r\n      this.flashMessage.showFlashMessage({\r\n        messages: [`24시간 이내 방영 항목이 없습니다.`],\r\n        type: 'danger',\r\n        timeout: 3000\r\n      });\r\n    }\r\n  }\r\n\r\n  findVideosAndSubtitles(item: Watching) {\r\n    this.dialog.open(EndedDialogComponent, {data: {\r\n      title: item.title,\r\n      mal_id: item.mal_id,\r\n      img: item.img\r\n    }});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ContentTypeInterceptor implements HttpInterceptor {\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        request = request.clone({\r\n            setHeaders: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","export abstract class HeaderAlign<T> {\r\n    private items: T[][];\r\n    alignedAs: number[];\r\n    alignments: number[][] = [];\r\n\r\n    constructor(alignedAs: number[], alignmentsCounts: number[]) {\r\n        this.alignedAs = alignedAs;\r\n        for (let i=0; i<alignmentsCounts.length; i++) {\r\n            let arr: number[] = [];\r\n            for (let j=0; j<alignmentsCounts[i]; j++) arr.push(1);\r\n            this.alignments.push(arr);\r\n        }\r\n    }\r\n\r\n    protected setItems(items: T[][]) {\r\n        this.items = items;\r\n    }\r\n\r\n    protected setAlignments(alignmentsCounts: number[]) {\r\n        this.alignments = [];\r\n        for (let i=0; i<alignmentsCounts.length; i++) {\r\n            let arr: number[] = [];\r\n            for (let j=0; j<alignmentsCounts[i]; j++) arr.push(1);\r\n            this.alignments.push(arr);\r\n        }\r\n    }\r\n\r\n    protected abstract getAlignment(standard: number, num?: number): (a: T, b: T) => number;\r\n    \r\n    align(num?: number, standard?: number) {\r\n        let numIsNotSet: boolean;\r\n        if ( numIsNotSet = (num == undefined) ) num = 0;\r\n        if ( standard ) this.alignedAs[num] = standard;\r\n        if ( numIsNotSet ) this.items[num].sort(this.getAlignment(this.alignedAs[num]));\r\n        else this.items[num].sort(this.getAlignment(this.alignedAs[num], num));\r\n        this.alignments[num][this.alignedAs[num]] *= -1;\r\n    }\r\n\r\n    alignAll(standards?: number[]) {\r\n        for (let [i, standard] of (standards ? standards : this.alignedAs).entries()) {\r\n            this.align(i, standard);\r\n        }\r\n    }\r\n\r\n}\r\n","export class Item {\r\n    _id?: string;\r\n    opened?: any;\r\n    modifying?: any;\r\n}\r\n\r\nexport interface ItemTitle {\r\n    kor: string,\r\n    eng: string,\r\n    jpn: string,\r\n    rv: string\r\n}\r\n\r\nexport function cloneObject(obj: any, excepts?: string[]): any {\r\n    let clone = {};\r\n    for (let key in obj) {\r\n        if ( excepts ) if ( excepts.includes(key) ) continue;\r\n        if ( typeof obj[key] == 'object' && obj[key] != null ) {\r\n            if ( Array.isArray(obj[key]) ) {\r\n                let arr = [];\r\n                for (let each of obj[key]) {\r\n                    if ( typeof each == 'object' ) arr.push(cloneObject(each));\r\n                    else arr.push(each);\r\n                }\r\n                clone[key] = arr;\r\n            } else clone[key] = cloneObject(obj[key]);\r\n\r\n        } else clone[key] = obj[key];\r\n    }\r\n    return clone;\r\n}\r\n\r\nfunction isValid(s: string | number): boolean { return !(s == null || s === ''); }\r\n\r\nexport function isOK(obj: any, excepts?: string[]): boolean {\r\n    if ( typeof obj != 'object' ) {\r\n        if ( !isValid(obj) ) return false;\r\n    } else {\r\n        for (let key in obj) {\r\n            if ( excepts ) if ( excepts.includes(key) ) continue;\r\n            if ( typeof obj[key] != 'object' ) {\r\n                if ( !isOK(obj[key]) ) return false;\r\n            } else if ( Array.isArray(obj[key]) ) {\r\n                for (let each of obj[key]) if ( !isOK(each) ) return false;\r\n            } else {\r\n                if ( !isOK(obj[key]) ) return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function notOK(messages?: string[]) {\r\n    this.flashMessage.showFlashMessage({\r\n        messages: messages ? messages : ['비어있는 필드가 있습니다.'],\r\n        type: 'danger',\r\n        timeout: 3000});\r\n}\r\n","export class Searched {\r\n    type: string;\r\n    title: string;\r\n    title_kor: string;\r\n    mal_id: number;\r\n    img: string;\r\n    premiered: {\r\n        year: number,\r\n        quarter: number\r\n    };\r\n}\r\n\r\nexport class MalSearched {\r\n    type: string;\r\n    title: {\r\n        kor: string,\r\n        eng: string,\r\n        jpn: string\r\n    };\r\n    premiered: {\r\n        year: number,\r\n        quarter: number\r\n    };\r\n    aired: {\r\n        start: string,\r\n        end: string\r\n    };\r\n    broadcast: Broadcast;\r\n    episodes: number; // can be null when it is a movie\r\n    studios: string[];\r\n    mal_id: number;\r\n    img: string;\r\n}\r\n\r\nexport interface Broadcast {\r\n    day: number,\r\n    hour: number,\r\n    minute: number\r\n}\r\n  \r\nexport interface SendingSearchedProtocol {\r\n    search: {\r\n        text: string,\r\n        option: string\r\n    },\r\n    malSearched: MalSearched\r\n}\r\n\r\nexport function searchedProtocolFactory(text: string, option: string): SendingSearchedProtocol {\r\n    return {\r\n        search: {text: text, option: option},\r\n        malSearched: null\r\n    };\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safeHtml'\r\n})\r\nexport class SafeHtml implements PipeTransform {\r\n  constructor(\r\n    private dom: DomSanitizer\r\n  ) { }\r\n\r\n  transform(value: string, args) {\r\n    return this.dom.bypassSecurityTrustHtml(value);\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\nexport class SafeUrl implements PipeTransform {\r\n    constructor(\r\n      private dom: DomSanitizer\r\n    ) { }\r\n  \r\n    transform(value: string, args) {\r\n      return this.dom.bypassSecurityTrustResourceUrl(value);\r\n    }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Movie } from 'src/app/models/movie';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MovieService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getMovies(): Observable<Movie[]> {\r\n    return this.http.get<Movie[]>('/api/movies').pipe();\r\n  }\r\n\r\n  getMovie(_id: string): Observable<Movie> {\r\n    return this.http.get<Movie>(`/api/movies/${_id}`).pipe();\r\n  }\r\n\r\n  addMovie(movie: Movie): Observable<Movie> {\r\n    return this.http.post<Movie>('/api/movies', movie).pipe();\r\n  }\r\n\r\n  modifyMovie(movie: Movie): Observable<Movie> {\r\n    return this.http.put<Movie>(`/api/movies/${movie._id}`, movie).pipe();\r\n  }\r\n\r\n  removeMovie(_id: string, series: number, sequence: number): Observable<any> {\r\n    return this.http.delete(`/api/movies/${_id}/${series}/${sequence}`).pipe();\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    return this.http.get<number>(`/api/movies/count`).pipe();\r\n  }\r\n\r\n  getRandom(): Observable<Movie> {\r\n    return this.http.get<Movie>('/api/movies/random').pipe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Plan } from '../models/plan';\r\nimport { IncompletionService } from '../models/incompletionService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanService implements IncompletionService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  get(_id: string): Observable<Plan> { return this.getPlan(_id) }\r\n  remove(_id: string): Observable<any> { return this.removePlan(_id) }\r\n\r\n  getPlans(): Observable<Plan[]> {\r\n    return this.http.get<Plan[]>('/api/plans').pipe();\r\n  }\r\n\r\n  getPlan(_id: string): Observable<Plan> {\r\n    return this.http.get<Plan>(`/api/plans/${_id}`).pipe();\r\n  }\r\n\r\n  addPlan(plan: Plan): Observable<Plan> {\r\n    return this.http.post<Plan>('/api/plans', plan).pipe();\r\n  }\r\n\r\n  modifyPlan(plan: Plan): Observable<Plan> {\r\n    return this.http.put<Plan>(`/api/plans/${plan._id}`, plan).pipe();\r\n  }\r\n\r\n  removePlan(_id: string): Observable<any> {\r\n    return this.http.delete(`/api/plans/${_id}`).pipe();\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    return this.http.get<number>(`/api/plans/count`).pipe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Searched, MalSearched } from 'src/app/models/searched';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  search(text: string, option: string): Observable<Searched[]> {\r\n    return this.http.get<Searched[]>(`/api/searches/${option}/${text}`).pipe();\r\n  }\r\n\r\n  mal(mal_id: number): Observable<MalSearched> {\r\n    return this.http.get<MalSearched>(`/api/searches/mal_id/${mal_id}`).pipe();\r\n  }\r\n\r\n  namuwiki(text: string): string {\r\n    // return `/api/searches/namuwiki/${encodeURI(text)}`;\r\n    return `https://namu.wiki/search/${encodeURI(text)}`;\r\n  }\r\n\r\n  namuwiki_icon(): string {\r\n    return 'import_contacts';\r\n  }\r\n\r\n  namuwiki_label(): string {\r\n    return '나무위키';\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TitleService {\r\n  private static readonly DefaultTitle = 'AnimeLog W';\r\n\r\n  constructor(\r\n    private titleService: Title\r\n  ) { }\r\n\r\n  setTitle(title: string) {\r\n    this.titleService.setTitle(TitleService.DefaultTitle + ' :: ' + title);\r\n  }\r\n\r\n  setDefaultTitle() {\r\n    this.titleService.setTitle(TitleService.DefaultTitle);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Tva } from 'src/app/models/tva';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TvaService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getTvas(): Observable<Tva[]> {\r\n    return this.http.get<Tva[]>('/api/tvas').pipe();\r\n  }\r\n\r\n  getTva(_id: string): Observable<Tva> {\r\n    return this.http.get<Tva>(`/api/tvas/${_id}`).pipe();\r\n  }\r\n\r\n  addTva(tva: Tva): Observable<Tva> {\r\n    return this.http.post<Tva>('/api/tvas', tva).pipe();\r\n  }\r\n\r\n  modifyTva(tva: Tva): Observable<Tva | any> {\r\n    return this.http.put<Tva | any>(`/api/tvas/${tva._id}`, tva).pipe();\r\n  }\r\n\r\n  removeTva(_id: string, series: number, sequence: number): Observable<any> {\r\n    return this.http.delete(`/api/tvas/${_id}/${series}/${sequence}`).pipe();\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    return this.http.get<number>(`/api/tvas/count`).pipe();\r\n  }\r\n\r\n  getRandom(): Observable<Tva> {\r\n    return this.http.get<Tva>('/api/tvas/random').pipe();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Watching, WatchingVideo, WatchingSubtitle, Ohys } from 'src/app/models/watching';\r\nimport { Ohli } from '../models/ohli';\r\nimport { IncompletionService } from '../models/incompletionService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WatchingService implements IncompletionService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  get(_id: string): Observable<Watching> { return this.getWatching(_id) }\r\n  remove(_id: string): Observable<Watching> { return this.removeWatching(_id) }\r\n\r\n  getWatchings(): Observable<Watching[]> {\r\n    return this.http.get<Watching[]>('/api/watchings').pipe();\r\n  }\r\n\r\n  getWatching(_id: string): Observable<Watching> {\r\n    return this.http.get<Watching>(`/api/watchings/${_id}`).pipe();\r\n  }\r\n\r\n  addWatching(watching: Watching): Observable<Watching> {\r\n    return this.http.post<Watching>('/api/watchings', watching).pipe();\r\n  }\r\n\r\n  modifyWatching(watching: Watching): Observable<Watching> {\r\n    return this.http.put<Watching>(`/api/watchings/${watching._id}`, watching).pipe();\r\n  }\r\n\r\n  removeWatching(_id: string): Observable<any> {\r\n    return this.http.delete(`/api/watchings/${_id}`).pipe();\r\n  }\r\n\r\n  /**\r\n   * @param year year when the animation ended, it is not needed when it is being aired\r\n   */\r\n  ohli(title: string, year?: number): Observable<Ohli[]> {\r\n    return this.http.get<Ohli[]>(year ? `/api/watchings/ohlis/${year}/${title}` : `/api/watchings/ohlis/airing/${title}`).pipe();\r\n  }\r\n\r\n  getVideos(title: string): Observable<WatchingVideo[]> {\r\n    return this.http.get<WatchingVideo[]>(`/api/watchings/airing/videos/${title}`).pipe();\r\n  }\r\n\r\n  getOhys(title: string): Observable<Ohys[]> {\r\n    return this.http.get<Ohys[]>(`/api/watchings/airing/ohys/${title}`).pipe();\r\n  }\r\n\r\n  getSubtitles(ohli_id: number): Observable<WatchingSubtitle[]> {\r\n    return this.http.get<WatchingSubtitle[]>(`/api/watchings/airing/subtitles/${ohli_id}`).pipe();\r\n  }\r\n\r\n  count(): Observable<number> {\r\n    return this.http.get<number>(`/api/watchings/count`).pipe();\r\n  }\r\n\r\n  getRandom(): Observable<Watching> {\r\n    return this.http.get<Watching>('/api/watchings/random').pipe();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}